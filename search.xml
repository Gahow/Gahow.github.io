<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Matlab学习笔记</title>
    <url>/2022/02/13/Matlab%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h4 id="变量类型">变量类型</h4>
<p>可通过<code>class(var)</code>查看<code>var</code>的变量类型</p>
<h5 id="logical">logical</h5>
<h5 id="char">char</h5>
<p>由一对单引号<code>''</code>包裹</p>
<h5 id="numeric">numeric</h5>
<p>默认为double类型</p>
<p>可选类型有：int8, int16, int32, int64, uint8, uint16, uint32, uint64, single, double</p>
<p>更改数值型变量显示格式，可使用如<code>format short</code></p>
<span id="more"></span>
<table>
<thead>
<tr class="header">
<th>格式</th>
<th>表现形式</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>short</td>
<td>整数显示为整数，浮点数保留小数点后4位</td>
</tr>
<tr class="even">
<td>long</td>
<td>整数显示为整数，浮点数保留小数点后15位</td>
</tr>
<tr class="odd">
<td>shortE</td>
<td>显示小数点后4位，以科学记数法表示</td>
</tr>
<tr class="even">
<td>longE</td>
<td>显示小数点后15位，以科学记数法表示</td>
</tr>
<tr class="odd">
<td>bank</td>
<td>显示小数点后两位</td>
</tr>
<tr class="even">
<td>hex</td>
<td>显示为十六进制</td>
</tr>
<tr class="odd">
<td>rat</td>
<td>显示为比例（分数）格式</td>
</tr>
</tbody>
</table>
<h5 id="struct">struct</h5>
<p>与C语言的struct类似</p>
<p>可直接通过<code>.</code>来赋值或访问</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% 赋值</span></span><br><span class="line">student.name = <span class="string">&#x27;John&#x27;</span>;</span><br><span class="line">student.num = <span class="number">10001</span>;</span><br><span class="line">student.score = <span class="number">90</span>;</span><br><span class="line">student(<span class="number">2</span>).name = <span class="string">&#x27;David&#x27;</span>;</span><br><span class="line">student(<span class="number">2</span>).num = <span class="number">10002</span>;</span><br><span class="line">student(<span class="number">2</span>).score = <span class="number">95</span>;</span><br><span class="line"><span class="comment">% 删除</span></span><br><span class="line">student(<span class="number">2</span>).name = [];</span><br><span class="line">student(<span class="number">1</span>) = [];</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">函数</th>
<th style="text-align: center;">作用</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>struct(field1, value1, ... , fieldN, valueN)</code></td>
<td style="text-align: center;">创建结构体</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>struct2cell(S)</code></td>
<td style="text-align: center;">将结构体转换为元胞数组</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>cell2struct(C)</code></td>
<td style="text-align: center;">将元胞数组转换为结构体</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>structfun(func, S)</code></td>
<td style="text-align: center;">将函数func作用于结构体S的每个字段</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>fieldnames(S)</code></td>
<td style="text-align: center;">获取结构体的所有字段名</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>isfield(S, field)</code></td>
<td style="text-align: center;">判断结构体S中是否含有字段field</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>orderfields(S)</code></td>
<td style="text-align: center;">将结构体S的字段按名称排序</td>
</tr>
</tbody>
</table>
<h5 id="cell">cell</h5>
<p>使用<code>&#123;&#125;</code>创建元胞数组</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A = &#123;<span class="number">3</span>, <span class="string">&#x27;John&#x27;</span>; <span class="number">1</span>:<span class="number">10</span>, [<span class="number">1</span>, <span class="number">2</span>; <span class="number">3</span>, <span class="number">4</span>]&#125;;</span><br><span class="line"><span class="comment">%单元索引()，返回子元胞数组</span></span><br><span class="line">A(<span class="number">1</span>, <span class="number">1</span>) = &#123;[<span class="number">3</span>]&#125;;</span><br><span class="line">A(<span class="number">1</span>, <span class="number">2</span>) = &#123;<span class="string">&#x27;John&#x27;</span>&#125;;</span><br><span class="line"><span class="comment">%内容索引&#123;&#125;，返回元胞数组对应位置的值</span></span><br><span class="line">A&#123;<span class="number">1</span>, <span class="number">1</span>&#125; = <span class="number">3</span>;</span><br><span class="line">A&#123;<span class="number">1</span>, <span class="number">2</span>&#125; = <span class="string">&#x27;John&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h4 id="常用数学运算函数">常用数学运算函数</h4>
<p>加<code>+</code></p>
<p>减<code>-</code></p>
<p>乘<code>*</code></p>
<p>矩阵对应元素相乘<code>.*</code></p>
<p>右除<code>/</code> （<code>A/B</code>相当于<code>A*inv(B)</code>）</p>
<p>左除<code>\</code> （<code>A\B</code>相当于<code>inv(A)*B</code>）</p>
<p>乘方<code>^</code></p>
<p>矩阵对应元素乘方<code>.^</code></p>
<p>取模<code>mod(a, b)</code></p>
<p>向上取整<code>ceil(x)</code></p>
<p>向下取整<code>floor(x)</code></p>
<p>四舍五入<code>round(x)</code></p>
<p>舍弃小数部分<code>fix(x)</code></p>
<p>矩阵求逆<code>inv(A)</code></p>
<p>向量点乘<code>dot(A, B)</code></p>
<p>向量叉乘<code>cross(A, B)</code></p>
<p>三角函数<code>sin(x)</code> <code>cos(x)</code> <code>tan(x)</code> <code>asin(x)</code> <code>acos(x)</code> <code>atan(x)</code></p>
<p>指对数函数<code>exp(x)</code> <code>log(x)</code>（即<code>ln(x)</code>) <code>log10(x)</code> <code>log2(x)</code> <code>pow2(x)</code> <code>sqrt(x)</code></p>
<h4 id="矩阵">矩阵</h4>
<h5 id="创建矩阵">创建矩阵</h5>
<p>使用空格<code></code>或逗号<code>,</code>行内分隔，使用分号<code>;</code>行间分隔</p>
<p><span class="math inline">\([1, 2; 3, 4] = \left[ \begin{array}{} 1&amp; 2 \\ 3&amp; 4 \end{array} \right]\)</span></p>
<p>创建向量<code>i:k:j</code>起始为i，终点为j，步长为k <code>i:j</code>默认步长为1</p>
<p>特殊矩阵：</p>
<p><span class="math inline">\(n \times n\)</span>的单位阵 <code>eye(n)</code></p>
<p><span class="math inline">\(n_1 \times n_2\)</span>的零矩阵 <code>zeros(n1, n2)</code></p>
<p><span class="math inline">\(n_1 \times n_2\)</span>的全为1矩阵 <code>ones(n1, n2)</code></p>
<p>以向量<code>vector</code>为对角线的对角阵 <code>diag(vector)</code></p>
<h5 id="矩阵索引">矩阵索引</h5>
<p>矩阵A的第i行第j列<code>A(i, j)</code></p>
<p>取出矩阵<span class="math inline">\(i_1, i_2, i_3\)</span>行 <code>A([i1, i2, i3], :)</code></p>
<p>取出矩阵<span class="math inline">\(i_1, i_2, i_3\)</span>列 <code>A( : , [i1, i2, i3])</code></p>
<p>取出矩阵前n行<code>A(1:n, :)</code></p>
<h5 id="常用函数">常用函数</h5>
<p>注：以下函数中，<code>dim=1</code>表示按列操作，<code>dim=2</code>表示按行操作</p>
<p>获取矩阵A在dim维度上的最大值<code>max(A, [], dim)</code></p>
<p>获取矩阵A在dim维度上的最小值<code>min(A, [], dim)</code></p>
<p>获取矩阵A在dim维度上的和<code>sum(A, dim)</code></p>
<p>获取矩阵A在dim维度上的平均值<code>mean(A, dim)</code></p>
<p>获取矩阵A在dim维度上按dir（可选<code>'ascned'</code>或<code>'descend'</code>）顺序排序结果<code>sort(A, dim, dir)</code></p>
<p>获取矩阵A按照每行第col个元素按dir顺序排序结果<code>sortrows(A, col, dir)</code></p>
<p>获取矩阵的行和列<code>size(A)</code></p>
<h4 id="基本编程语句">基本编程语句</h4>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%if语句</span></span><br><span class="line"><span class="keyword">if</span> condition1</span><br><span class="line">	statement1</span><br><span class="line"><span class="keyword">elseif</span> condition2</span><br><span class="line">	statement2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	statement3</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%switch语句</span></span><br><span class="line"><span class="keyword">switch</span> expression</span><br><span class="line"><span class="keyword">case</span> value1</span><br><span class="line">	statement1</span><br><span class="line"><span class="keyword">case</span> value2</span><br><span class="line">	statement2</span><br><span class="line"><span class="keyword">otherwise</span></span><br><span class="line">	statement</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%while语句</span></span><br><span class="line"><span class="keyword">while</span> condition</span><br><span class="line">	statement</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%for语句</span></span><br><span class="line"><span class="keyword">for</span> var = start : increment : <span class="keyword">end</span></span><br><span class="line">	statement</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h4 id="定义函数">定义函数</h4>
<h5 id="标准方式">标准方式</h5>
<p>创建<code>function.m</code>文件</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%例如定义快速幂函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">quick_power</span><span class="params">(base, power)</span></span></span><br><span class="line">y = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> power &gt;= <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">mod</span>(power, <span class="number">2</span>) == <span class="number">1</span></span><br><span class="line">        y = y * base;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    base = base * base;</span><br><span class="line">    power = <span class="built_in">fix</span>(power / <span class="number">2</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%将华氏温度转化为摄氏温度，使用Ctrl+c退出程序</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">F_to_C</span><span class="params">()</span></span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span></span><br><span class="line">    F_degree = input(<span class="string">&#x27;tempreature in Fahrenheit: &#x27;</span>, <span class="string">&#x27;s&#x27;</span>);</span><br><span class="line">    F_degree = str2double(F_degree);</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isempty</span>(F_degree)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    C_degree = (F_degree<span class="number">-32</span>)*<span class="number">5</span>/<span class="number">9</span>;</span><br><span class="line">    <span class="built_in">disp</span>([<span class="string">&#x27;tempreature in Celsius: &#x27;</span> num2str(C_degree)])</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h5 id="函数句柄的形式定义函数">函数句柄的形式定义函数</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">函数 = @(输入变量) 输出变量</span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">f = @(x, y) <span class="built_in">exp</span>(-(x*x + y*y));</span><br><span class="line">f(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<h4 id="文件操作">文件操作</h4>
<p>Matlab支持的文件类型</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">文件内容</th>
<th style="text-align: center;">扩展名</th>
<th style="text-align: center;">读取文件的函数</th>
<th style="text-align: center;">写入文件的函数</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">Matlab数据</td>
<td style="text-align: center;"><code>.mat</code></td>
<td style="text-align: center;"><code>load()</code></td>
<td style="text-align: center;"><code>save()</code></td>
</tr>
<tr class="even">
<td style="text-align: center;">Excel表格</td>
<td style="text-align: center;"><code>.xls</code>,<code>.xlsx</code></td>
<td style="text-align: center;"><code>readtable()</code></td>
<td style="text-align: center;"><code>writetable()</code></td>
</tr>
<tr class="odd">
<td style="text-align: center;">空格分隔的数字</td>
<td style="text-align: center;"><code>.txt</code></td>
<td style="text-align: center;"><code>load()</code></td>
<td style="text-align: center;"><code>save()</code></td>
</tr>
</tbody>
</table>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">T = <span class="built_in">readtable</span>(<span class="string">&#x27;in.xlsx&#x27;</span>); <span class="comment">% 读取in.xlsx表格中的内容</span></span><br><span class="line">S = table2struct(T); <span class="comment">% 将表格转化为结构体</span></span><br><span class="line">row = <span class="built_in">size</span>(T, <span class="number">1</span>); <span class="comment">% 获取表格行数</span></span><br><span class="line">col = <span class="built_in">size</span>(T, <span class="number">2</span>); <span class="comment">% 获取表格列数</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : row</span><br><span class="line">	S(<span class="built_in">i</span>).score = <span class="built_in">sqrt</span>(S(<span class="built_in">i</span>).score) * <span class="number">10</span> <span class="comment">% 对结构体每一项的score值开根号再乘10</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">[~, index] = <span class="built_in">sort</span>([S.field], <span class="string">&#x27;descend&#x27;</span>) <span class="comment">% 按照结构体S的字段field降序排序，得到顺序为index</span></span><br><span class="line">S = S(index, :); <span class="comment">% 将S按照index的顺序排序，即将结构体降序排序</span></span><br><span class="line">T = struct2table(S) <span class="comment">% 将处理后的结构体转化为表格</span></span><br><span class="line"><span class="built_in">writetable</span>(T, <span class="string">&#x27;out.xlsx&#x27;</span>) <span class="comment">% 将表格T存入out.xlsx文件中</span></span><br></pre></td></tr></table></figure>
<h4 id="基础绘图">基础绘图</h4>
<h5 id="绘制二维线图">绘制二维线图</h5>
<p>使用<code>plot()</code>函数</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">plot</span>(X1, Y1, LineSpec1, ... , Xn, Yn, LineSpecn)</span><br></pre></td></tr></table></figure>
<p><code>LineSpec</code>的可选项通过<code>help plot</code>查看官方文档获取</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">2</span>*<span class="built_in">pi</span>);</span><br><span class="line">y1 = <span class="built_in">sin</span>(x);</span><br><span class="line">y2 = <span class="built_in">cos</span>(x);</span><br><span class="line"><span class="built_in">plot</span>(x, y1, <span class="string">&#x27;--.r&#x27;</span>, x, y2, <span class="string">&#x27;-.*k&#x27;</span>); <span class="comment">% 绘制six(x)与cos(x)图像</span></span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;sin(x)&#x27;</span>, <span class="string">&#x27;cos(x)&#x27;</span>); <span class="comment">% 添加图例</span></span><br><span class="line">title(<span class="string">&#x27;Function of sin(x) &amp; cos(x)&#x27;</span>); <span class="comment">% 添加图标题</span></span><br><span class="line">xlabel(<span class="string">&#x27;x = 0 to 2\pi&#x27;</span>) <span class="comment">% 添加x轴标签</span></span><br><span class="line">ylabel(<span class="string">&#x27;sin(x) &amp; cos(x)&#x27;</span>) <span class="comment">% 添加y轴标签</span></span><br></pre></td></tr></table></figure>
<p>使用<code>line()</code>函数可绘制基本线条</p>
<p>使用<code>text()</code>函数可添加文本说明</p>
<p>使用<code>annotation()</code>函数创建箭头等</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">y = x.^<span class="number">2</span> .* <span class="built_in">sin</span>(x);</span><br><span class="line"><span class="built_in">plot</span>(x, y);</span><br><span class="line">line([<span class="number">2</span>, <span class="number">2</span>],[<span class="number">0</span>, <span class="number">2</span>^<span class="number">2</span> * <span class="built_in">sin</span>(<span class="number">2</span>)]); <span class="comment">% 绘制x=2的直线</span></span><br><span class="line">str = <span class="string">&#x27;$$ \int_&#123;0&#125;^&#123;2&#125; x^2\sin(x) dx $$&#x27;</span>;</span><br><span class="line">text(<span class="number">0.25</span>, <span class="number">2.5</span>, str, <span class="string">&#x27;Interpreter&#x27;</span>, <span class="string">&#x27;latex&#x27;</span>); <span class="comment">% 以latex形式添加说明内容str</span></span><br><span class="line">annotation(<span class="string">&#x27;arrow&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, [<span class="number">0.32</span>, <span class="number">0.5</span>], <span class="string">&#x27;Y&#x27;</span>, [<span class="number">0.6</span>, <span class="number">0.4</span>]); <span class="comment">% 添加箭头</span></span><br></pre></td></tr></table></figure>
<h5 id="绘制散点图">绘制散点图</h5>
<p>使用<code>scatter()</code>函数</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">2</span>*<span class="built_in">pi</span>, <span class="number">200</span>);</span><br><span class="line">y = <span class="built_in">cos</span>(x) + <span class="built_in">rand</span>(<span class="number">1</span>, <span class="number">200</span>); <span class="comment">% 添加(0, 1)之间的随机偏差值</span></span><br><span class="line">sz = <span class="number">25</span>; <span class="comment">% 散点的大小</span></span><br><span class="line">c = <span class="built_in">linspace</span>(<span class="number">1</span>, <span class="number">10</span>, <span class="built_in">length</span>(x)); <span class="comment">% 设定颜色变化</span></span><br><span class="line"><span class="built_in">scatter</span>(x, y, sz, c, <span class="string">&#x27;filled&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h5 id="调整坐标轴边框网格">调整坐标轴、边框、网格</h5>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">命令</th>
<th style="text-align: center;">作用</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>axis on/off</code></td>
<td style="text-align: center;">设置坐标轴可见性</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>axis normal</code></td>
<td style="text-align: center;">默认图框纵横比</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>axis equal</code></td>
<td style="text-align: center;">沿每个坐标轴使用相同的数据单位长度</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>axis tight</code></td>
<td style="text-align: center;">将坐标轴范围设置为等同于数据范围，使轴框紧密围绕数据</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>box on/off</code></td>
<td style="text-align: center;">设置边框可见性</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>grid on/off</code></td>
<td style="text-align: center;">设置网格可见性</td>
</tr>
</tbody>
</table>
<h5 id="在一个图像中绘制多条图线">在一个图像中绘制多条图线</h5>
<p>使用<code>hold on</code>与<code>hold off</code>使多个绘图结果保留在绘图区中</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="number">0</span> : <span class="built_in">pi</span>/<span class="number">100</span> : <span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(x, <span class="built_in">sin</span>(x));</span><br><span class="line"><span class="built_in">plot</span>(x, <span class="built_in">cos</span>(x));</span><br><span class="line"><span class="built_in">hold</span> off</span><br></pre></td></tr></table></figure>
<h5 id="在一个窗口绘制多个子图">在一个窗口绘制多个子图</h5>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">subplot(m, n, p) <span class="comment">% 将图窗分为m行n列，在第p个网格内绘制图像</span></span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">linspace</span>(-<span class="built_in">pi</span>, <span class="built_in">pi</span>);</span><br><span class="line">y1 = <span class="built_in">sin</span>(x);</span><br><span class="line">y2 = x - x.^<span class="number">3</span> / <span class="number">6</span> + x.^<span class="number">5</span> / <span class="number">120</span>;</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(x, y1);</span><br><span class="line">title(<span class="string">&#x27;sin(x)&#x27;</span>);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(x, y2);</span><br><span class="line">title(<span class="string">&#x27;Taylor poly&#x27;</span>);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>]); <span class="comment">% 在3、4网格合并绘制子图</span></span><br><span class="line"><span class="built_in">plot</span>(x, y1, x, y2);</span><br><span class="line">title(<span class="string">&#x27;sin(x) &amp; Taylor poly&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h5 id="获取图形句柄">获取图形句柄</h5>
<p>使用<code>get()</code>和<code>set()</code>函数可访问或修改图形对象的属性，具体操作参见官方文档</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">2</span>*<span class="built_in">pi</span>);</span><br><span class="line">y = <span class="built_in">sin</span>(x);</span><br><span class="line">pic = <span class="built_in">plot</span>(x, y);</span><br><span class="line">set(pic, <span class="string">&#x27;LineWidth&#x27;</span>, <span class="number">4</span>, <span class="string">&#x27;Color&#x27;</span>, <span class="string">&#x27;b&#x27;</span>); <span class="comment">% 设置线宽和颜色</span></span><br><span class="line">set(gca, <span class="string">&#x27;XTick&#x27;</span>, <span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">2</span>:<span class="number">2</span>*<span class="built_in">pi</span>); <span class="comment">% 设置x轴的坐标值</span></span><br><span class="line">set(gca, <span class="string">&#x27;XTickLabel&#x27;</span>, &#123;<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;\pi/2&#x27;</span>, <span class="string">&#x27;\pi&#x27;</span>, <span class="string">&#x27;3\pi/2&#x27;</span>, <span class="string">&#x27;2\pi&#x27;</span>&#125;); <span class="comment">% 设置x轴坐标的Label</span></span><br><span class="line">get(pic) <span class="comment">% 返回图像pic的所有属性值</span></span><br></pre></td></tr></table></figure>
<h5 id="保存图形">保存图形</h5>
<p>使用<code>saveas()</code>或<code>print()</code>函数</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">fig = <span class="built_in">plot</span>(<span class="number">1</span>: <span class="number">10</span>);</span><br><span class="line">saveas(fig, <span class="string">&#x27;figure.png&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">2</span>*<span class="built_in">pi</span>);</span><br><span class="line">y1 = <span class="built_in">sin</span>(x);</span><br><span class="line">y2 = <span class="built_in">cos</span>(x);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(x, y1);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(x, y2);</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;figure&#x27;</span>, <span class="string">&#x27;-dpng&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h4 id="进阶绘图">进阶绘图</h4>
<h5 id="折线图">折线图</h5>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">函数</th>
<th style="text-align: center;">特征</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>loglog()</code></td>
<td style="text-align: center;">x轴和y轴都取对数坐标</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>semilogx()</code></td>
<td style="text-align: center;">x轴取对数坐标</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>semilogy()</code></td>
<td style="text-align: center;">y轴取对数坐标</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>plotyy()</code></td>
<td style="text-align: center;">双y轴</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>polarplot()</code></td>
<td style="text-align: center;">极坐标系</td>
</tr>
</tbody>
</table>
<h5 id="统计图表">统计图表</h5>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">函数</th>
<th style="text-align: center;">图形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>histogram()</code></td>
<td style="text-align: center;">直方图</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>bar()</code></td>
<td style="text-align: center;">条形图</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>pie()</code></td>
<td style="text-align: center;">饼图</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>stairs()</code></td>
<td style="text-align: center;">阶梯图</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>stem()</code></td>
<td style="text-align: center;">针状图</td>
</tr>
</tbody>
</table>
<h5 id="三维图像投影">三维图像投影</h5>
<p>使用<code>imagesc()</code>函数，使用<code>colorbar</code>命令可以增加二维图上颜色与高度对应的图例</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">Z = <span class="number">10</span> + peaks;</span><br><span class="line">surf(Z);</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line">imagesc(Z);</span><br></pre></td></tr></table></figure>
<h5 id="三维线图">三维线图</h5>
<p>使用<code>plot3()</code>函数</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">t = <span class="number">0</span>: <span class="built_in">pi</span>/<span class="number">50</span>: <span class="number">10</span>*<span class="built_in">pi</span>;</span><br><span class="line">st = <span class="built_in">sin</span>(t);</span><br><span class="line">ct = <span class="built_in">cos</span>(t);</span><br><span class="line"><span class="built_in">plot3</span>(st, ct, t)</span><br></pre></td></tr></table></figure>
<h5 id="三维面图">三维面图</h5>
<p>首先使用<code>meshgrid()</code>函数生成二维网格，之后利用<code>mesh()</code>或<code>surf()</code>函数绘制三维面，前者不填充网格而后者填充网格</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">[X, Y] = <span class="built_in">meshgrid</span>(<span class="number">-8</span>: <span class="number">0.5</span>: <span class="number">8</span>);</span><br><span class="line">R = <span class="built_in">sqrt</span>(X.^<span class="number">2</span> + Y.^<span class="number">2</span>) + <span class="built_in">eps</span>;</span><br><span class="line">Z = <span class="built_in">sin</span>(R)./R;</span><br><span class="line">C = X.*Y;</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">mesh(X, Y, Z, C);</span><br><span class="line">colorbar;</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">surf(X, Y, Z, C);</span><br><span class="line">colorbar;</span><br></pre></td></tr></table></figure>
<h5 id="等高线图">等高线图</h5>
<p>使用<code>contour()</code>和<code>contourf()</code>函数绘制三维图像的等高线，前者不填充网格而后者填充网格</p>
<p>使用<code>meshc()</code>和<code>surfc()</code>函数可在绘制三维图像时同时绘制其等高线</p>
<h5 id="绘制三维体">绘制三维体</h5>
<p>使用<code>patch()</code>函数绘制三维体或平面多边形</p>
<h4 id="多项式计算">多项式计算</h4>
<h5 id="多项式表示">多项式表示</h5>
<p>使用向量表示，向量中的元素为多项式的系数降幂排序</p>
<p>如<span class="math inline">\(f(x) = x^4 + 3x^3 -5x +2\)</span>用向量<code>p = [1, 3, 0, -5, 2]</code>表示</p>
<h5 id="多项式求值">多项式求值</h5>
<p>使用<code>polyval(p, x)</code>可计算多项式<code>p</code>在<code>x</code>每一点处的值</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">p = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">-5</span>, <span class="number">2</span>];</span><br><span class="line">x = <span class="built_in">linspace</span>(<span class="number">-2</span>, <span class="number">3</span>);</span><br><span class="line">y = polyval(p, x);</span><br><span class="line"><span class="built_in">plot</span>(x, y);</span><br></pre></td></tr></table></figure>
<h5 id="多项式相乘">多项式相乘</h5>
<p>使用<code>conv()</code>函数</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">p1 = [<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>];</span><br><span class="line">p2 = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">-2</span>];</span><br><span class="line">p = conv(p1, p2); <span class="comment">% 得到p = [2, 1, -5, 4, 3, -2]</span></span><br></pre></td></tr></table></figure>
<h5 id="多项式因式分解">多项式因式分解</h5>
<p>使用<code>roots()</code>函数</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">p = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-2</span>];</span><br><span class="line">r = roots(p); <span class="comment">% 得到r = [-2, 1, i, -i]</span></span><br></pre></td></tr></table></figure>
<h5 id="多项式微分">多项式微分</h5>
<p>使用<code>polyder()</code>函数</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">p = [<span class="number">3</span>, <span class="number">0</span>, <span class="number">-2</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">5</span>];</span><br><span class="line">dp = polyder(p); <span class="comment">% 得到dp = [15, 0, -6, 0, 1]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 求导多项式的乘积</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">-2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">11</span>];</span><br><span class="line">b = [<span class="number">1</span>, <span class="number">-10</span>, <span class="number">15</span>];</span><br><span class="line">dab = polyder(a, b); <span class="comment">% 得到dab = [6, -60, 140, -90, 22, -110]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 求导多项式商</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">0</span>, <span class="number">-3</span>, <span class="number">0</span>, <span class="number">-1</span>];</span><br><span class="line">b = [<span class="number">1</span>, <span class="number">4</span>];</span><br><span class="line">[q, d] = polyder(a, b); <span class="comment">% 得到q = [3, 16, -3, -24, 1], d = [1, 8, 16]</span></span><br></pre></td></tr></table></figure>
<h5 id="多项式积分">多项式积分</h5>
<p>使用<code>polyint()</code>函数</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">p = [<span class="number">3</span>, <span class="number">0</span>, <span class="number">-4</span>, <span class="number">10</span>, <span class="number">-25</span>];</span><br><span class="line">q = polyint(p); <span class="comment">% 得到q = [0.6, 0, -1.3333, 5, -25, 0]</span></span><br></pre></td></tr></table></figure>
<h4 id="非线性表达式数值运算">非线性表达式数值运算</h4>
<h5 id="非线性方程组求根">非线性方程组求根</h5>
<p>使用<code>fsolve()</code>函数求根</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">F = @(x) [<span class="built_in">exp</span>(-<span class="built_in">exp</span>(-(x(<span class="number">1</span>) + x(<span class="number">2</span>)))) - x(<span class="number">2</span>)*(<span class="number">1</span> + x(<span class="number">1</span>)^<span class="number">2</span>), ...</span><br><span class="line">    x(<span class="number">1</span>) * <span class="built_in">cos</span>(x(<span class="number">2</span>)) + x(<span class="number">2</span>) * <span class="built_in">sin</span>(x(<span class="number">1</span>)) - <span class="number">0.5</span>];</span><br><span class="line">x0 = [<span class="number">0</span>, <span class="number">0</span>];</span><br><span class="line">fsolve(F, x0)</span><br></pre></td></tr></table></figure>
<h5 id="差分求导数近似值">差分求导数近似值</h5>
<p>使用<code>diff()</code>函数求差分</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">h = <span class="number">0.0001</span>; <span class="comment">% 步长</span></span><br><span class="line">x = -<span class="built_in">pi</span> : h : <span class="built_in">pi</span>;</span><br><span class="line">f = <span class="built_in">sin</span>(x);</span><br><span class="line">df = diff(f) / h;</span><br><span class="line"><span class="built_in">plot</span>(x, f, x(:, <span class="number">1</span> : <span class="built_in">length</span>(df)), df); <span class="comment">% 绘制df的函数图像时，需把x向量的长度设置为与df相同</span></span><br></pre></td></tr></table></figure>
<h5 id="数值积分">数值积分</h5>
<p>使用<code>integral()</code>函数，使用<code>integral2()</code>,<code>integral3()</code>进行二重、三重积分</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">f = @(x) <span class="built_in">exp</span>(-x.^<span class="number">2</span>) .* <span class="built_in">log</span>(x).^<span class="number">2</span>;</span><br><span class="line">I = integral(f, <span class="number">0</span>, Inf); <span class="comment">% 得到I = 1.9475</span></span><br></pre></td></tr></table></figure>
<h4 id="符号运算">符号运算</h4>
<h5 id="创建符号变量">创建符号变量</h5>
<p>使用<code>sym</code>或<code>syms</code>函数</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sin</span>(sym(<span class="built_in">pi</span>)) <span class="comment">% 得到0</span></span><br><span class="line"><span class="built_in">sin</span>(<span class="built_in">pi</span>)      <span class="comment">% 得到1.2246e-16</span></span><br><span class="line">phi = (<span class="number">1</span> + <span class="built_in">sqrt</span>(sym(<span class="number">5</span>))) / <span class="number">2</span> <span class="comment">% 得到5^(1/2)/2 + 1/2</span></span><br><span class="line"></span><br><span class="line">syms a, b, c; <span class="comment">% 创建符号变量a, b, c</span></span><br><span class="line">syms a [<span class="number">2</span>, <span class="number">4</span>] <span class="comment">% 创建2行4列的符号矩阵</span></span><br></pre></td></tr></table></figure>
<h5 id="化简符号表达式">化简符号表达式</h5>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">函数</th>
<th style="text-align: center;">功能</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>simplify()</code></td>
<td style="text-align: center;">一般的表达式化简</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>expand()</code></td>
<td style="text-align: center;">展开表达式</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>factor()</code></td>
<td style="text-align: center;">分解因式</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>horner()</code></td>
<td style="text-align: center;">将多项式化为嵌套形式</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>subs()</code></td>
<td style="text-align: center;">将表达式中的符号做代换</td>
</tr>
</tbody>
</table>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">syms x y;</span><br><span class="line">f = (x + <span class="number">1</span>) * (x^<span class="number">2</span> + <span class="number">1</span>) * (x^<span class="number">2</span> - <span class="number">3</span>*x + <span class="number">1</span>);</span><br><span class="line">expand(f) <span class="comment">% 得到x^5 - 2*x^4 - x^3 - x^2 - 2*x + 1</span></span><br><span class="line"></span><br><span class="line">f = x^<span class="number">3</span> + x^<span class="number">2</span> - <span class="number">5</span>*x + <span class="number">3</span>;</span><br><span class="line"><span class="built_in">factor</span>(f) <span class="comment">% 得到[x + 3, x - 1, x - 1]</span></span><br><span class="line"></span><br><span class="line">f = x^<span class="number">5</span> + x^<span class="number">4</span> + x^<span class="number">3</span> + x^<span class="number">2</span> + x;</span><br><span class="line">horner(f) <span class="comment">% 得到x*(x*(x*(x*(x + 1) + 1) + 1) + 1)</span></span><br><span class="line"></span><br><span class="line">f = x^<span class="number">3</span> + <span class="number">2</span>*x^<span class="number">2</span> - <span class="number">1</span>;</span><br><span class="line">subs(f, <span class="number">2</span>) <span class="comment">% 得到15</span></span><br><span class="line"></span><br><span class="line">f = <span class="built_in">exp</span>(-(x^<span class="number">2</span> + y^<span class="number">2</span>));</span><br><span class="line">subs(f, x, <span class="number">2</span>) <span class="comment">% 得到exp(- y^2 - 4)</span></span><br></pre></td></tr></table></figure>
<h5 id="求方程的解析解">求方程的解析解</h5>
<p>使用<code>solve()</code>函数</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">syms a b c x;</span><br><span class="line">eqn1 = a*x^<span class="number">2</span> + b*x + c == <span class="number">0</span>;</span><br><span class="line">X1 = solve(eqn1);</span><br><span class="line">X1(<span class="number">1</span>) <span class="comment">% 得到-(b + (b^2 - 4*a*c)^(1/2))/(2*a)</span></span><br><span class="line">X1(<span class="number">2</span>) <span class="comment">% 得到-(b - (b^2 - 4*a*c)^(1/2))/(2*a)</span></span><br><span class="line"></span><br><span class="line">syms x y;</span><br><span class="line">eqn2 = (<span class="number">6</span>*x^<span class="number">2</span> - <span class="number">6</span>*x^<span class="number">2</span>*y + x*y^<span class="number">2</span> - x*y + y^<span class="number">3</span> - y^<span class="number">2</span> == <span class="number">0</span>);</span><br><span class="line">solve(eqn2, y)	<span class="comment">% 得到 [1, 2*x, -3*x]</span></span><br><span class="line"></span><br><span class="line">syms u v;</span><br><span class="line">eqn3 = [<span class="number">2</span>*u + v == <span class="number">0</span>, u - v == <span class="number">1</span>];</span><br><span class="line">solve(eqn3,[u v]) <span class="comment">% 得到[1/3, -2/3]</span></span><br></pre></td></tr></table></figure>
<h5 id="微积分运算">微积分运算</h5>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">函数</th>
<th style="text-align: center;">功能</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>limit()</code></td>
<td style="text-align: center;">求极限</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>diff()</code></td>
<td style="text-align: center;">求微分</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>int()</code></td>
<td style="text-align: center;">求积分</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>symsum()</code></td>
<td style="text-align: center;">级数求和</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>taylor()</code></td>
<td style="text-align: center;">泰勒展开</td>
</tr>
</tbody>
</table>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">syms x;</span><br><span class="line">expr = <span class="number">1</span>/x;</span><br><span class="line">limit(expr, x, <span class="number">0</span>) <span class="comment">% 得到NaN</span></span><br><span class="line">limit(expr, x, <span class="number">0</span>, <span class="string">&#x27;left&#x27;</span>) <span class="comment">% 得到-Inf</span></span><br><span class="line">limit(expr, x, <span class="number">0</span>, <span class="string">&#x27;right&#x27;</span>) <span class="comment">% 得到Inf</span></span><br><span class="line"></span><br><span class="line">syms a b c x;</span><br><span class="line">expr = a*x^<span class="number">2</span> + b*x + c;</span><br><span class="line">diff(expr, x) <span class="comment">% 得到b + 2*a*x</span></span><br><span class="line">diff(expr, a) <span class="comment">% 得到x^2</span></span><br><span class="line"></span><br><span class="line">syms x;</span><br><span class="line">expr = <span class="number">1</span>/<span class="built_in">cos</span>(x);</span><br><span class="line">int(expr, x) <span class="comment">% 得到log(1/cos(x)) + log(sin(x) + 1)</span></span><br><span class="line">int(expr, x, [-<span class="built_in">pi</span>/<span class="number">4</span>, <span class="built_in">pi</span>/<span class="number">4</span>]) <span class="comment">% 得到log(2*2^(1/2) + 3)</span></span><br><span class="line"></span><br><span class="line">syms k;</span><br><span class="line">expr = <span class="number">1</span> / k^<span class="number">2</span>;</span><br><span class="line">symsum(expr, k, [<span class="number">1</span>, Inf]) <span class="comment">% 得到pi^2/6</span></span><br><span class="line"></span><br><span class="line">syms x;</span><br><span class="line">taylor(<span class="built_in">exp</span>(x), <span class="string">&#x27;order&#x27;</span>, <span class="number">10</span>) <span class="comment">% 得到x^9/362880 + x^8/40320 + x^7/5040 + x^6/720 + x^5/120 + x^4/24 + x^3/6 + x^2/2 + x + 1</span></span><br><span class="line">taylor(<span class="built_in">sin</span>(x)) <span class="comment">% 得到x^5/120 - x^3/6 + x</span></span><br></pre></td></tr></table></figure>
<h5 id="符号表达式绘制图像">符号表达式绘制图像</h5>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">函数</th>
<th style="text-align: center;">功能</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>fplot()</code></td>
<td style="text-align: center;">绘制二维线图</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>fplot3()</code></td>
<td style="text-align: center;">绘制三维线图</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>ezpolar()</code></td>
<td style="text-align: center;">绘制极坐标图像</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>fmesh()</code></td>
<td style="text-align: center;">绘制三维网格图</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>fsurf()</code></td>
<td style="text-align: center;">绘制三维曲面</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>fcontour()</code></td>
<td style="text-align: center;">绘制等高线图</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>fimplicit()</code></td>
<td style="text-align: center;">绘制隐函数图像</td>
</tr>
</tbody>
</table>
<h4 id="统计与拟合">统计与拟合</h4>
<h5 id="统计">统计</h5>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">函数</th>
<th style="text-align: center;">功能</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>mean()</code></td>
<td style="text-align: center;">计算平均值</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>median()</code></td>
<td style="text-align: center;">计算中位数</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>mode()</code></td>
<td style="text-align: center;">计算众数</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>prctile()</code></td>
<td style="text-align: center;">计算百分位数</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>max()</code></td>
<td style="text-align: center;">计算最大值</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>min()</code></td>
<td style="text-align: center;">计算最小值</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>std()</code></td>
<td style="text-align: center;">计算标准差</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>var()</code></td>
<td style="text-align: center;">计算方差</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>skewness()</code></td>
<td style="text-align: center;">计算数据的偏度</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>kurtosis()</code></td>
<td style="text-align: center;">计算数据的峰值</td>
</tr>
</tbody>
</table>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">21</span>];</span><br><span class="line"><span class="built_in">mean</span>(x) <span class="comment">% 返回6.27</span></span><br><span class="line">median(x) <span class="comment">% 返回5</span></span><br><span class="line">mode(x) <span class="comment">% 返回5</span></span><br><span class="line"><span class="built_in">max</span>(x) <span class="comment">% 返回21</span></span><br><span class="line"><span class="built_in">min</span>(x) <span class="comment">% 返回1</span></span><br><span class="line">prctile(x, <span class="number">30</span>) <span class="comment">% 计算数据的30%位数，返回2.8</span></span><br><span class="line">prctile(x, <span class="number">100</span>) <span class="comment">% 计算数据的100%位数，返回21</span></span><br><span class="line">prctile(x, <span class="number">15</span>) <span class="comment">% 计算数据的15%位数，返回1.15</span></span><br><span class="line">std(x) <span class="comment">% 计算标准差，返回5.97</span></span><br><span class="line">var(x) <span class="comment">% 计算方差，返回35.62</span></span><br></pre></td></tr></table></figure>
<h5 id="统计图表-1">统计图表</h5>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">函数</th>
<th style="text-align: center;">功能</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>bar()</code></td>
<td style="text-align: center;">绘制条形图</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>stem()</code></td>
<td style="text-align: center;">绘制针状图</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>area()</code></td>
<td style="text-align: center;">绘制填充图</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>boxplot()</code></td>
<td style="text-align: center;">绘制箱线图</td>
</tr>
</tbody>
</table>
<h5 id="统计推断">统计推断</h5>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">函数</th>
<th style="text-align: center;">功能</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>ttest()</code></td>
<td style="text-align: center;">进行T检验</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>ztest()</code></td>
<td style="text-align: center;">进行Z检验</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>ranksum()</code></td>
<td style="text-align: center;">进行秩和检验</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>signrank()</code></td>
<td style="text-align: center;">进行符号秩检验</td>
</tr>
</tbody>
</table>
<h5 id="一元多项式拟合">一元多项式拟合</h5>
<p>使用<code>polyfit()</code>函数</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="number">0</span> : <span class="number">0.5</span> : <span class="number">5</span>;</span><br><span class="line">y = <span class="number">1</span> ./ (<span class="number">1</span> + x);</span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span> : <span class="number">6</span></span><br><span class="line">    p = polyfit(x, y, k); <span class="comment">% 生成k次拟合函数</span></span><br><span class="line">    x1 = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">5</span>); <span class="comment">% 重新取点画图</span></span><br><span class="line">    y1 = <span class="number">1</span> ./ (<span class="number">1</span> + x1);</span><br><span class="line">    p1 = polyval(p, x1); <span class="comment">% 计算在x1各点拟合函数p的取值</span></span><br><span class="line">    subplot(<span class="number">2</span>, <span class="number">3</span>, k);</span><br><span class="line">    <span class="built_in">plot</span>(x1, p1, x1, y1);</span><br><span class="line">    title(k);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h5 id="多元线性拟合">多元线性拟合</h5>
<p>使用<code>regress()</code>函数</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">load carsmall       <span class="comment">% 导入数据集</span></span><br><span class="line">x1 = Weight;        <span class="comment">% 以Weight为第一个拟合变量</span></span><br><span class="line">x2 = Horsepower;    <span class="comment">% 以Horsepower为第二个拟合变量</span></span><br><span class="line">y = MPG;            <span class="comment">% 以MPG为待拟合值</span></span><br><span class="line"></span><br><span class="line">X = [<span class="built_in">ones</span>(<span class="built_in">size</span>(x1)) x1 x2 x1.*x2];  <span class="comment">% 以x1,x2,x1*x2作为拟合方程的变量</span></span><br><span class="line">                                    <span class="comment">% 即设y = k + a*x1 + b*x2 + c*x1*x2</span></span><br><span class="line">b = regress(y, X);   <span class="comment">%解出向量b，有b(1) = k, b(2) = a, b(3) = b, b(4) = c</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">scatter3</span>(x1, x2, y, <span class="string">&#x27;filled&#x27;</span>)  <span class="comment">% 绘制散点图</span></span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line">x1fit = <span class="built_in">min</span>(x1) : <span class="number">100</span> : <span class="built_in">max</span>(x1);</span><br><span class="line">x2fit = <span class="built_in">min</span>(x2) : <span class="number">10</span> : <span class="built_in">max</span>(x2);</span><br><span class="line">[X1FIT, X2FIT] = <span class="built_in">meshgrid</span>(x1fit, x2fit);</span><br><span class="line">YFIT = b(<span class="number">1</span>) + b(<span class="number">2</span>)*X1FIT + b(<span class="number">3</span>)*X2FIT + b(<span class="number">4</span>)*X1FIT.*X2FIT; <span class="comment">% 计算各点的拟合值</span></span><br><span class="line">mesh(X1FIT, X2FIT, YFIT)    <span class="comment">% 绘制拟合图</span></span><br><span class="line">xlabel(<span class="string">&#x27;Weight&#x27;</span>)</span><br><span class="line">ylabel(<span class="string">&#x27;Horsepower&#x27;</span>)</span><br><span class="line">zlabel(<span class="string">&#x27;MPG&#x27;</span>)</span><br><span class="line">view(<span class="number">50</span>,<span class="number">10</span>)</span><br><span class="line"><span class="built_in">hold</span> off</span><br></pre></td></tr></table></figure>
<h5 id="拟合工具箱">拟合工具箱</h5>
<p>使用<code>cftool()</code>打开曲线拟合工具箱，可进行数据导入，可选择各类拟合方式，并自动完成绘图</p>
<h5 id="一维插值">一维插值</h5>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">函数</th>
<th style="text-align: center;">功能</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>interp1()</code></td>
<td style="text-align: center;">线性插值</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>spline()</code></td>
<td style="text-align: center;">三次样条插值</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>pchip()</code></td>
<td style="text-align: center;">三次Hermite插值</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>mkpp()</code></td>
<td style="text-align: center;">生成分段多项式</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>ppval()</code></td>
<td style="text-align: center;">计算分段多项式</td>
</tr>
</tbody>
</table>
<h5 id="二维插值">二维插值</h5>
<p>使用<code>interp2()</code>函数</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">[X, Y] = <span class="built_in">meshgrid</span>(<span class="number">-3</span> : <span class="number">3</span>);	<span class="comment">% 生成7*7的网格</span></span><br><span class="line">V = peaks(X, Y);</span><br><span class="line">subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">surf(X, Y, V);	<span class="comment">% 绘制初始图</span></span><br><span class="line">set(gca, <span class="string">&#x27;PlotBoxAspectRatio&#x27;</span>, [<span class="number">2</span> <span class="number">2</span> <span class="number">3</span>]);</span><br><span class="line">title(<span class="string">&#x27;Original Sampling&#x27;</span>);</span><br><span class="line"></span><br><span class="line">[Xq, Yq] = <span class="built_in">meshgrid</span>(<span class="number">-3</span> : <span class="number">0.25</span> : <span class="number">3</span>);	<span class="comment">% 以0.25为间隔设置插值点</span></span><br><span class="line">Vq = interp2(X, Y, V, Xq, Yq);		<span class="comment">% 计算各点处插值后的值</span></span><br><span class="line">subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">surf(Xq, Yq, Vq);	<span class="comment">% 绘制插值图</span></span><br><span class="line">set(gca, <span class="string">&#x27;PlotBoxAspectRatio&#x27;</span>, [<span class="number">2</span> <span class="number">2</span> <span class="number">3</span>]);</span><br><span class="line">title(<span class="string">&#x27;Linear Interpolation Using Finer Grid&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h4 id="杂项">杂项</h4>
<p><code>help cmd</code>，查找指令<code>cmd</code>的用法</p>
<p>语句后加<code>;</code>，阻止终端输出该条结果</p>
<p>使用循环语句时应尽量预先分配内存空间</p>
<p>在脚本开头应该清空工作区缓存等</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clear <span class="comment">% 清空工作区内存中的变量</span></span><br><span class="line">close <span class="comment">% 关闭之前程序绘制的图像</span></span><br><span class="line">clc   <span class="comment">% 清空终端</span></span><br></pre></td></tr></table></figure>
<p>使用<code>which function.m</code>可查看函数<code>function</code>文件所在的位置</p>
<p>使用<code>edit funtion.m</code>可查看和编辑函数<code>function</code>的源代码</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>建模</tag>
      </tags>
  </entry>
  <entry>
    <title>Vim学习笔记</title>
    <url>/2022/01/17/Vim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h4 id="vim的一些学习资源">Vim的一些学习资源</h4>
<p>1.Terminal下的<code>vimtutor</code>，个人觉得刷上几遍<code>vimtutor</code>熟悉后应该就算Vim入门了</p>
<p>2.<code>pacvim n</code>，<code>n</code>代表选择的level，一个练习vim光标移动的小游戏</p>
<h4 id="为什么学vim">为什么学Vim</h4>
<p>装逼是第一生产力！（doge）一方面确实是因为觉得vim是一个跟此前接触的文本编辑器不太一样的新玩意，觉得这个挺酷的，另一方面是某个c语言上机题让我把30几条的if语句改为case，手动改的属实烦人，想起vim好像可以通过几个指令自动化完成。所以我相信学好vim大概是可以提高一些生产力的。</p>
<span id="more"></span>
<h4 id="vim光标移动">vim光标移动</h4>
<p>左<code>h</code> 下<code>j</code> 上<code>k</code> 右<code>l</code></p>
<p>向后一个词<code>w</code> 向后一个词忽略中间标点<code>W</code></p>
<p>移动至当前词的末尾<code>e</code> 忽略中间标点移动至当前词的末尾<code>E</code></p>
<p>向前一个词<code>b</code> 向前一个词忽略中间标点<code>B</code></p>
<p>移动到行首<code>0</code> 移动到行末<code>$</code></p>
<p>上一个段落<code>&#123;</code> 下一个段落<code>&#125;</code></p>
<p>移动到文件头<code>gg</code> 移动到文件尾<code>G</code></p>
<p>当一行长文字被显示为两行时，如下图所示，若要让光标从<code>t</code>移动到<code>y</code>，直接按<code>j</code>是无法实现的</p>
<p>到视角上的下一行<code>gj</code> 视角上的上一行<code>gk</code></p>
<p><img src="/Users/sheldon/Library/Application Support/typora-user-images/截屏2022-01-17 上午9.59.40.png" alt="截屏2022-01-17 上午9.59.40" style="zoom:50%;" /></p>
<h4 id="vim文本搜索与替换">vim文本搜索与替换</h4>
<p><code>:set hlsearch</code>可以设置为将搜索结果高亮显示</p>
<p>搜索文本<code>/</code> 到下一个搜索到的文本<code>n</code> 到上一个搜索到的文本<code>N</code></p>
<p>另一种方式：搜索文本<code>?</code> 到下一个<code>N</code> 到上一个<code>n</code></p>
<p>搜索当前光标所在的词<code>*</code></p>
<p>向后搜索同一行最近的"x"<code>fx</code> 向前搜索同一行最近的"x"<code>Fx</code></p>
<p>画面移动：让当前行停留在中间位置<code>zz</code> 停留在上方<code>zt</code> 停留在下方<code>zb</code></p>
<p>替换当前行第一个word1为word2：<code>:s/word1/word2/</code></p>
<p>替换当前行所有word1为word2：<code>:s/word1/word2/g</code></p>
<p>（注意当word中有<code>\</code>时要用<code>\\</code>表示）</p>
<p>替换第n行到最后一行中每一行第一个word1为word2：<code>:n,$s/word1/word2/</code></p>
<p>替换第n行到最后一行中每一行所有word1为word2：<code>:n,$s/word1/word2/g</code></p>
<p>替换全文每一行的第一个word1为word2：<code>:%s/word1/word2/</code></p>
<p>替换全文所有的word1为word2：<code>:%s/word1/word2/g</code></p>
<p>在行首插入指定字符<code>:%s/^/word/</code></p>
<p>在行尾插入指定字符<code>:%s/$/word/</code></p>
<h4 id="vim选取复制粘贴">vim选取、复制、粘贴</h4>
<p>进入Visual模式<code>v</code> 进入Visual模式并按行选取<code>V</code></p>
<p>复制<code>y</code> 复制一整行 <code>yy</code></p>
<p>在光标后粘贴<code>p</code> 在光标前粘贴<code>P</code> 复制n次<code>np</code></p>
<p>复制n行<code>nyy</code></p>
<p>复制从光标处到行尾<code>y$</code></p>
<p>复制到文本末尾<code>yG</code></p>
<p>撤销上一步<code>u</code> 重做撤销的操作<code>Ctrl+r</code></p>
<p>把内容复制到a寄存器<code>"ay</code> 把内容复制到b寄存器<code>"by</code> 以此类推</p>
<p>粘贴a寄存器的内容<code>"ap</code> 粘贴b寄存器的内容<code>"bp</code> 以此类推</p>
<p>检视目前所有寄存器的内容<code>:reg</code></p>
<p>设置寄存器与系统剪切板共通<code>:set clipboard=unnamed</code></p>
<h4 id="vim文本编辑">vim文本编辑</h4>
<p>在光标前进入插入模式<code>i</code> 跳到行首进入Insert模式<code>I</code></p>
<p>在光标后进入插入模式<code>a</code> 跳到行末进入Insert模式<code>A</code></p>
<p>在当前行下方创建新的一行并进入Insert模式<code>o</code></p>
<p>在当前行上方创建新的一行并进入Insert模式<code>O</code></p>
<p>删除光标所在文字<code>x</code>（删除操作都会把删除的文字放入寄存器中）</p>
<p>删除选择的内容<code>d</code></p>
<p>从光标删除至行末<code>D</code></p>
<p>删除光标所在行<code>dd</code></p>
<p>从光标删除至文本末尾<code>dG</code></p>
<p>从光标删除至文本头<code>dgg</code></p>
<p>删除选择的内容并进入Insert模式<code>c</code></p>
<p>从光标删除至行末并进入Insert模式<code>C</code></p>
<p>用"x"替换光标所在的字符<code>rx</code></p>
<p>向右或向左缩进<code>&gt;&gt;</code>或<code>&lt;&lt;</code></p>
<p>将n行向右或向左缩进<code>n&gt;&gt;</code>或<code>n&lt;&lt;</code></p>
<p>将选取内容自动排版<code>=</code></p>
<h4 id="vim多文档操作tab">vim多文档操作（tab）</h4>
<p>在当前窗口开启文档<code>:e FILENAME</code></p>
<p>新建窗口<code>:tabe</code></p>
<p>在新窗口开启文档<code>:tabe FILENAME</code></p>
<p>跳转至下一个窗口<code>gt</code></p>
<p>跳转至上一个窗口<code>gT</code></p>
<p>新增水平分割视窗<code>:new</code></p>
<p>新增垂直分割视窗<code>:vnew</code></p>
<p>移动游标到指定视窗<code>Ctrl+w+hjkl</code></p>
<p>循环移动视窗<code>Ctrl+ww</code></p>
<p>水平分割开启多个文档<code>vim -o FILE1 FILE2 ...</code></p>
<p>垂直分割开启多个文档<code>vim -O FILE1 FILE 2 ...</code></p>
<p>用分页多窗口开启多个文档<code>vim -p FILE1 FILE2 ...</code></p>
<h4 id="vim多文档操作buffer">vim多文档操作（buffer）</h4>
<p>打开多个文档，以不同buffer的形式<code>vim FILE1 FILE2 ...</code></p>
<p>列出所有buffer<code>:ls</code></p>
<p>切换到第k个buffer<code>:bk</code></p>
<p>直接切换buffer<code>:b FILENAME</code></p>
<p>切换到上一个buffer<code>Ctrl + ^</code></p>
<p>切换到下一个buffer<code>:bn</code></p>
<p>切换到上一个buffer<code>:bp</code></p>
<p>切换到第一个buffer<code>:bf</code></p>
<p>切换到最后一个buffer<code>:bl</code></p>
<p>关闭当前buffer<code>:bd</code></p>
<p>把当前所有buffer展开为tab<code>:tab ba</code></p>
<h4 id="vim文本选取进阶">vim文本选取进阶</h4>
<p>选取一个单词<code>viw</code>（i=inner，w=word）</p>
<p>选取引号里的内容<code>vi"</code> 选取花括号里的内容<code>vi&#123;</code> 以此类推</p>
<p>选取引号及其里面的内容<code>va"</code>（a=around）</p>
<p>选取tag里的内容<code>vit</code> 选取tag及tag里的内容<code>vat</code></p>
<p>可以把<code>v</code>换成<code>d</code>或<code>c</code>（d=delete, c=change)实现别的操作</p>
<p>进入Visual Block模式<code>Ctrl+v</code>，可以实现选取多行同时添加相同的内容</p>
<h4 id="vim语法">vim语法</h4>
<p>模式切换</p>
<p><code>i</code> <code>v</code> <code>V</code> <code>Ctrl+v</code> <code>Esc</code>或<code>Ctrl+[</code></p>
<p>名词</p>
<p><code>w</code> = word <code>s</code> = sentence <code>p</code> = paragraph <code>t</code> = tag 及各类符号</p>
<p>动词</p>
<p><code>y</code> = yank <code>p</code> = paste <code>d</code> = delete <code>c</code> = change</p>
<p>范围</p>
<p><code>i</code> = inner <code>a</code> = around</p>
<p>量词</p>
<p>即数字</p>
<p>指令的一般语法</p>
<p>模式+量词+动词+范围（也可以是数字）+名词</p>
<p>如：<code>viw</code> <code>v3w</code> <code>vaw</code> <code>vap</code> <code>vi&#123;</code> <code>3yy</code> <code>4p</code> <code>d3w</code>或<code>3dw</code> <code>cis</code> <code>vip</code></p>
<h4 id="实用技巧">实用技巧</h4>
<p>移动到行首<code>^</code>（跳过开头的缩进）</p>
<p>移动到第n行<code>nG</code>或<code>ngg</code></p>
<p>打开行号<code>:set number</code></p>
<p>往下翻一页<code>Ctrl+f</code></p>
<p>往上翻一页<code>Ctrl+b</code></p>
<p>将选中的代码行折叠<code>zf</code> 展开<code>zd</code></p>
<p>大小写互换<code>~</code></p>
<p>重做最后做的动作<code>.</code></p>
<p>将多行并为同一行<code>J</code></p>
<p>在Insert模式下删除一个词<code>Ctrl+w</code></p>
<p>删除光标前的内容<code>Ctrl+u</code>（Insert和Normal模式都可使用）</p>
<p>执行外部指令<code>:!指令</code></p>
<p>执行外部指令并贴上内容<code>:r!指令</code></p>
<p>使用帮助手册<code>:help</code></p>
<p>找到当前行的下一个字符x<code>fx</code> 到下一个目标字符上<code>;</code> 到上一个目标字符<code>,</code></p>
<h4 id="好用的插件总结">好用的插件总结</h4>
<p>首先使用<code>vim-plug</code>来安装插件</p>
<p>airline：界面美化</p>
<p>nerdtree：展示文件夹</p>
<p>ctrlp：文件搜索</p>
<p>emmet：代码补全（html、css）</p>
<p>surround：处理成对的引号括号问题</p>
<p>repeat：加强<code>.</code>的重做功能</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title>《深入理解计算机系统》学习笔记</title>
    <url>/2022/03/31/%E3%80%8A%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="第二章-信息的表示与处理">第二章 信息的表示与处理</h3>
<h4 id="信息存储">信息存储</h4>
<p>大多数计算机使用<span class="math inline">\(8\)</span>位（bit）的块，称为字节（byte），作为最小的可寻址的内存单位，而不是访问内存中单独的位。机器级程序将内存视为一个非常大的字节数组，称为虚拟内存（virtual memory）。</p>
<p>每台计算机都有一个字长（word size），虚拟地址是以字来编码的，对于一个字长为<span class="math inline">\(w\)</span>位的机器，虚拟地址的范围为<span class="math inline">\(0 ～ 2^w-1\)</span>。所以对于一个<span class="math inline">\(32\)</span>位字长的机器而言，字长限制了虚拟地址的空间为<span class="math inline">\(2^{32}\)</span>，即为<span class="math inline">\(4GB\)</span>。我们知道当代一些程序可能跑起来就需要占用近<span class="math inline">\(10GB\)</span>的内存，显然<span class="math inline">\(32\)</span>位的远古机器是支持不了的。</p>
<p>对于一个<span class="math inline">\(w\)</span>位的整数，其位表示位<span class="math inline">\([x_{w-1}, x_{w-2}, \cdots, x_1, x_0]\)</span>，其中<span class="math inline">\(x_{w-1}\)</span>是最高有效位，<span class="math inline">\(x_0\)</span>是最低有效位。通常<span class="math inline">\(w\)</span>是<span class="math inline">\(8\)</span>的倍数，这些位就能被分组为字节，其中最高有效字节为<span class="math inline">\([x_{w-1},x_{w-2}, \cdots , x_{w-8}]\)</span>，最低有效字节为<span class="math inline">\([x_7, x_6, \cdots, x_0]\)</span>。</p>
<span id="more"></span>
<p>机器存储字节有两种不同的方法：一种称为小端法（little endian），即最低有效字节存储在前，一种称为大端法（big endian），即最高有效字节存储在前。（这两个术语命名的来源在书中有介绍，还挺有趣的，有兴趣的可以翻翻书或自己查一下）。引用书中的例子和图片，考虑0x12345678的存储，两种不同方式的存储如下图所示。对于大部分的计算机，似乎都是采取小端法进行存储。</p>
<figure>
<img src="/images/《深入理解计算机系统》学习笔记/little&amp;big_endian.png" alt="little&amp;big_endian" /><figcaption aria-hidden="true">little&amp;big_endian</figcaption>
</figure>
<h4 id="c语言中的移位运算">C语言中的移位运算</h4>
<h5 id="左移运算">左移运算</h5>
<p>对于一个位表示为<span class="math inline">\([x_{w-1}, x_{w-2}, \cdots, x_0]\)</span>的操作数<span class="math inline">\(x\)</span>，x&lt;&lt;k会得到一个位表示为<span class="math inline">\([x_{w-k-1}, x_{w-k-2}, \cdots, x_0, 0, \cdots, 0]\)</span>的值。</p>
<h5 id="右移运算">右移运算</h5>
<p>分为两种形式：逻辑右移与算术右移，逻辑右移在左端补<span class="math inline">\(k\)</span>个<span class="math inline">\(0\)</span>，而算术右移在左端补<span class="math inline">\(k\)</span>个最高有效位的值。进行运算x&gt;&gt;k，逻辑右移得到结果为<span class="math inline">\([0, \cdots, 0, x_{w-1}, x_{w-2}, \cdots, x_k]\)</span>，算术右移得到结果为<span class="math inline">\([x_{w-1}, \cdots, x_{w-1}, x_{w-1},x_{w-2}, \cdots, x_k]\)</span>。在C语言中，默认对unsigned类型的数进行逻辑右移，对signed类型的数进行算数右移。</p>
<h4 id="整数表示">整数表示</h4>
<p>记位向量<span class="math inline">\(\vec{x} = [x_{w-1}, x_{w-2}, \cdots, x_0]\)</span></p>
<h5 id="无符号数编码">无符号数编码</h5>
<p><span class="math inline">\(B2U_w(\vec{x}) := \sum\limits_{i = 0}^{w-1}x_i 2^i\)</span></p>
<h5 id="补码编码">补码编码</h5>
<p><span class="math inline">\(B2T_w(\vec{x}) := -x_{w-1}2^{w-1} + \sum\limits_{i = 0}^{w-2}x_i 2^i\)</span></p>
<h5 id="有符号数与无符号数之间的转换">有符号数与无符号数之间的转换</h5>
<p>对于C语言来说，只从位级的角度来看，比如有符号数<span class="math inline">\(-1\)</span>的补码表示为0xFFFFFFFF，转化为无符号数会得到<span class="math inline">\(2^{32}-1\)</span>，即C语言在转化时，只是对相同的位表示，采用不用的解释，从而得到有符号或无符号数。从而我们可以定义<span class="math inline">\(T2U_w(x) := B2U_w(T2B_w(x))\)</span>，<span class="math inline">\(U2T_w(x):=B2T_w(U2B_w(x))\)</span></p>
<p>同时我们容易观察到上述函数具有以下性质：</p>
<p><span class="math inline">\(T2U_w(x) = \left\{ \begin{array}{l} x + 2^w,&amp; x &lt; 0 \\ x, &amp;x &gt;=0 \end{array}\right.\)</span></p>
$U2T_w(u) = {
<span class="math display">\[\begin{array}{l} u,&amp; u \leq TMax_w \\ u-2^w, &amp;u &gt; TMax_w  \end{array}\]</span>
<p>. $</p>
<h5 id="扩展一个数字的位表示">扩展一个数字的位表示</h5>
<p>如果要把字长较长的整数转化为字长较短的，显然在某些情况下是会出现溢出而无法表示的。如果要把字长较短的整数扩展为字长较长的，这总是可以做到的。</p>
<p>对无符号数只需进行零扩展，即将<span class="math inline">\(w\)</span>位的位向量<span class="math inline">\(\vec{u}=[u_{w-1},u_{w-2}, \cdots, u_0]\)</span>扩展为<span class="math inline">\(w&#39;(w&#39; &gt; w)\)</span>位的位向量<span class="math inline">\(\vec{u}&#39; = [0, \cdots, 0, u_{w-1}, u_{w-2}, \cdots, u_0]\)</span></p>
<p>对补码数进行符号扩展，即将<span class="math inline">\(w\)</span>位的位向量<span class="math inline">\(\vec{x}=[x_{w-1},x_{w-2}, \cdots, x_0]\)</span>扩展为<span class="math inline">\(w&#39;(w&#39; &gt; w)\)</span>位的位向量<span class="math inline">\(\vec{x}&#39; = [x_{w-1}, \cdots, x_{w-1}, x_{w-1}, x_{w-2}, \cdots, x_0]\)</span></p>
<p>容易验证对补码数采取符号扩展后，整数值不变。</p>
<h5 id="截断数字">截断数字</h5>
<p>对一个整数做截断时，可能会出现溢出改变它的值。</p>
<p>对无符号数和补码数进行截断的方式相同，即将<span class="math inline">\(w\)</span>位的位向量<span class="math inline">\(\vec{x}=[x_{w-1},x_{w-2}, \cdots, x_0]\)</span>，截断为<span class="math inline">\(k\)</span>位的位向量<span class="math inline">\(\vec{x}&#39; = [x_{k-1},x_{k-2}, \cdots, x_0]\)</span>，之后按照无符号数或补码数的方式，对该<span class="math inline">\(k\)</span>位的位向量进行解释得到对应的整数值。</p>
<h4 id="整数运算">整数运算</h4>
<h5 id="加法">加法</h5>
<p>无符号数加法</p>
<p><span class="math inline">\(x+_w^uy = \left\{ \begin{array}{l} x+y, &amp; x+y &lt; 2^w &amp; Normal \\ x+y-2^w,&amp;2^w \leq x+y &lt; 2^{w+1} &amp; Overflow \end{array} \right.\)</span></p>
<p>无符号数加法逆元</p>
<p><span class="math inline">\(-^u_wx = \left\{ \begin{array}{l}x, &amp; x = 0 \\ 2^w - x, &amp; x &gt; 0 \end{array} \right.\)</span></p>
<p>补码加法</p>
<p><span class="math inline">\(x+_w^ty = \left\{\begin{array}{l}x+y-2^w, &amp; 2^{w-1} \leq x+y &amp; positive\ overflow \\ x+y, &amp; -2^{w-1} \leq x+y &lt; w^{w-1} &amp; normal \\ x+y + 2^w, &amp; x+y &lt; -2^{w-1} &amp; negative \ overflow \end{array} \right.\)</span></p>
<p>补码加法逆元</p>
<p><span class="math inline">\(-_w^tx = \left\{ \begin{array}{l}TMin_w, &amp; x = TMin_w \\ -x, &amp; x &gt; TMin_w \end{array} \right.\)</span></p>
<h5 id="乘法">乘法</h5>
<p>无符号乘法</p>
<p><span class="math inline">\(x*_w^uy = (x \cdot y) mod 2^w\)</span></p>
<p>补码乘法</p>
<p><span class="math inline">\(x*_w^ty = U2T_w((x*_w^u y) mod 2^w)\)</span></p>
<p>把补码位的<span class="math inline">\(1\)</span>视为<span class="math inline">\(-1\)</span>（因为补码位的权重是<span class="math inline">\(-2^{w-1}\)</span>），即可利用乘法竖式的形式进行补码的乘法运算，得到补码乘法结果的二进制表示。</p>
<p>乘除以常数</p>
<p>乘以或除以2的幂可以通过移位得到，同时由于整数乘除法指令比较慢，乘法需要10个甚至更多的时钟周期，除法更是需要30个甚至更多的时钟周期，而加减和移位运算只需要1个时钟周期，因此编译器在编译时，会尝试用移位和加减法运算组合来代替乘除法，如x*14，编译器可以将其替换为(x&lt;&lt;4) - (x&lt;&lt;1)。</p>
<p>在进行右移时，无论正负数都采取向下取整，即7&gt;&gt;1 = 3，-9&gt;&gt;2 = -2，如果希望向上取整，则需要利用一个小trick，通过加上一个偏置来实现，即<span class="math inline">\(\lceil \frac{x}{y} \rceil = \lfloor \frac{x+y-1}{y} \rfloor\)</span></p>
<h4 id="浮点数">浮点数</h4>
<h5 id="ieee浮点数表示">IEEE浮点数表示</h5>
<p>IEEE浮点数标准采用<span class="math inline">\(V = (-1)^s \times 2^E \times M\)</span>的形式来表示一个数。</p>
<p>一个单独的符号位<span class="math inline">\(s\)</span>直接编码符号<span class="math inline">\(s\)</span>，<span class="math inline">\(k\)</span>位阶码字段<span class="math inline">\(exp=e_{k-1}\cdots e_1 e_0\)</span>编码阶码<span class="math inline">\(E\)</span>，<span class="math inline">\(n\)</span>位小数字段<span class="math inline">\(frac = f_{n-1}\cdots f_1 f_0\)</span>编码尾数<span class="math inline">\(M\)</span>。</p>
<p>在C语言里，单精度浮点数（float）的s、exp和frac字段分别为1位、k=8位和n=23位，总共为一个32位的表示；双精度浮点数的s、exp和frac字段分别为1位、k=11位和n=52位，总共为一个64位的表示。</p>
<p>根据exp的值，被编码的值可以分为以下几种情况：</p>
<ol type="1">
<li><p>Normalized Values</p>
<p>当exp不全为1且不全为0时，exp的位按照无符号整数进行解释得到e，e的范围在<span class="math inline">\(1～2^{k}-2\)</span>，通过减去一个偏置（Bias）得到<span class="math inline">\(E\)</span>的值，<span class="math inline">\(Bias = 2^{k-1}-1\)</span>，<span class="math inline">\(E = e-Bias\)</span>，从而<span class="math inline">\(E\)</span>的范围为<span class="math inline">\([-2^{k-1}+2 , 2^{k-1}-1]\)</span>，对于单精度而言是<span class="math inline">\(-126～+127\)</span>，对于双精度而言是<span class="math inline">\(-1022 ～ +1023\)</span>.</p>
<p>小数字段frac被解释为小数值f，其二进制表示为<span class="math inline">\(0.f_{n-1} \cdots f_1 f_0\)</span>，尾数定义为<span class="math inline">\(M = 1+f\)</span>。这种定义方式同样是一种trick，因为我们总是能调整<span class="math inline">\(E\)</span>的值，使得<span class="math inline">\(M\)</span>在范围<span class="math inline">\(1 \leq M &lt; 2\)</span>中，这样<span class="math inline">\(M\)</span>总是能表示为<span class="math inline">\(1.f_{n-1} \cdots f_1 f_0\)</span>，利用这种技巧，我们可以获得一个额外的精度位，而不需要去表示这个<span class="math inline">\(1\)</span>，这表示方式称为implied leading 1.</p></li>
<li><p>Denormalized Values</p>
<p>当exp的位表示全为0时，阶码值为<span class="math inline">\(E = 1-Bias\)</span>，而尾数<span class="math inline">\(M = f\)</span>，通过这种设定，我们能发现浮点数值的增长与二进制位的增长是一致的。不考虑符号位，这种情况下最小的数可以表示0，而在Normalized的情况下显然无法表示0，这种情况的最大数为<span class="math inline">\(00\cdots 0 1 \cdots 1\)</span>，表示<span class="math inline">\(V = 2^{1-(2^{k-1}-1)} \cdot(1-2^{-n})\)</span>，在Normalized的情况下，最小数为<span class="math inline">\(00 \cdots 1 0 \cdots 0\)</span>，此时<span class="math inline">\(V = 2^{1-(2^{k-1}-1)} \cdot (1+0)\)</span>，从而保证了浮点数定义的连续性。</p></li>
<li><p>Special Values</p>
<p>当exp的位表示全为1时，如果frac的位表示全为0，则当<span class="math inline">\(s=0\)</span>时代表<span class="math inline">\(+\infty\)</span>，当<span class="math inline">\(s = 1\)</span>时代表<span class="math inline">\(- \infty\)</span>。如果frac的位表示不全为0，则结果值代表NaN（Not a Number）</p></li>
</ol>
<p>截取书中的图片（一个8位的浮点数表示，1位符号位，4位指数位，3位小数位）作为位表示的例子</p>
<p><img src="/images/《深入理解计算机系统》学习笔记/8bits_expr.png" alt="8bits_expr" style="zoom:50%;" /></p>
<h5 id="舍入">舍入</h5>
<p>常用的4种方式：Round-to-even, Round-toward-zero, Round-down, Round-up</p>
<p>后三种方式容易理解，第一种方式即我们常说的四舍五入，但是要向偶数舍入，即1.5和2.5舍入后都得到2，3.145和3.135舍入后都得到3.14。</p>
<h5 id="浮点运算">浮点运算</h5>
<p>要注意浮点数运算不满足结合律，比如<span class="math inline">\((3.14+1e50)-1e50\)</span>会得到<span class="math inline">\(0\)</span>，但是<span class="math inline">\(3.14+(1e50-1e50)\)</span>会得到<span class="math inline">\(3.14\)</span>，这是由于浮点精度的误差导致的。</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>CS</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Hexo+Github搭建个人博客</title>
    <url>/2021/10/31/%E5%9F%BA%E4%BA%8EHexo+Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>本文在mac OS11.6环境下进行配置，出现的一些问题在文末进行总结。</p>
<h5 id="安装node.js">安装Node.js</h5>
<p>可通过在terminal中运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install node.js</span><br></pre></td></tr></table></figure>
<p>安装Node.js，可通过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>
<p>查看node版本，确认是否成功安装。</p>
<figure>
<img src="/images/截屏2021-10-31%20下午9.01.46.png" alt="node版本" /><figcaption aria-hidden="true">node版本</figcaption>
</figure>
<span id="more"></span>
<h5 id="安装git">安装git</h5>
<p>通过安装Xcode Command Line Tools即带有git，可通过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>
<p>查看git的版本，确认是否成功安装。</p>
<figure>
<img src="/images/截屏2021-10-31%20下午9.02.07.png" alt="git版本" /><figcaption aria-hidden="true">git版本</figcaption>
</figure>
<h5 id="注册获取github仓库">注册获取GitHub仓库</h5>
<p>注册一个github账号，在Your repositories里新建一个仓库，其中repository name填username.github.io</p>
<figure>
<img src="/images/截屏2021-10-31%20下午9.08.01.png" alt="创建GitHub仓库" /><figcaption aria-hidden="true">创建GitHub仓库</figcaption>
</figure>
<h5 id="安装hexo">安装Hexo</h5>
<p>在你要存储你的博客文件的地方开始安装Hexo，可通过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i hexo-cli -g</span><br></pre></td></tr></table></figure>
<p>安装Hexo。</p>
<figure>
<img src="/images/截屏2021-10-31%20下午9.10.47.png" alt="安装Hexo" /><figcaption aria-hidden="true">安装Hexo</figcaption>
</figure>
<p>之后通过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>
<p>确认Hexo版本从而确认是否成功安装。</p>
<figure>
<img src="/images/截屏2021-10-31%20下午9.12.37.png" alt="Hexo版本" /><figcaption aria-hidden="true">Hexo版本</figcaption>
</figure>
<h5 id="创建博客文件">创建博客文件</h5>
<p>可通过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init Blog</span><br></pre></td></tr></table></figure>
<p>在当前位置初始化一个名字为Blog的文件夹。</p>
<p>通过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd Blog</span><br></pre></td></tr></table></figure>
<p>进入Blog文件夹，接着输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>安装必需的组件。</p>
<figure>
<img src="/images/截屏2021-10-31%20下午9.16.05.png" alt="安装必需组件" /><figcaption aria-hidden="true">安装必需组件</figcaption>
</figure>
<h5 id="利用hexo初始文件生成本地网页">利用Hexo初始文件生成本地网页</h5>
<p>通过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>生成本地网页并部署至本地服务器。<img src="/images/截屏2021-10-31%20下午9.17.38.png" alt="部署本地网页" /></p>
<p>这时通过http://localhost:4000即可进入我们的博客预览。</p>
<figure>
<img src="/images/截屏2021-10-31%20下午9.19.42.png" alt="博客预览" /><figcaption aria-hidden="true">博客预览</figcaption>
</figure>
<p>上图所示即为Hexo提供的初始模版。</p>
<h5 id="将本地网页部署到github上">将本地网页部署到GitHub上</h5>
<p>进入博客文件夹位置（上文的Blog）运行如下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure>
<p>之后通过下列命令生成密钥SSH key</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure>
<p>选择文件夹与输入密码和确认密码时都可不填，回车三次即可。</p>
<p>之后通过下列命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>可返回密钥，将该段内容复制。</p>
<p>进入GitHub，头像下方的settings，点击SSH and GPG keys，新建一个SSH，Title可随意，Key中填入上面复制的内容。</p>
<p>回到Terminal输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p>出现下图所示内容则代表GitHub成功与Blog文件夹连接。</p>
<p><img src="/images/截屏2021-10-31%20下午9.32.30.png" /></p>
<p>之后通过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure>
<p>进入_config.yml进行修改，将最后一行deploy补充为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:yourname/yourname.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<figure>
<img src="/images/截屏2021-10-31%20下午9.35.28.png" alt="修改_config.yml" /><figcaption aria-hidden="true">修改_config.yml</figcaption>
</figure>
<p>之后保存退出即可。</p>
<p>最后安装一个拓展，通过下列命令实现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure>
<p>最后通过下列命令即可将博客部署到Github网页上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>稍等一会即可通过yourname.github.io访问你的博客啦！</p>
<p>如果部署失败可通过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>再次尝试。</p>
<h5 id="模版修改">模版修改</h5>
<p>当然Hexo初始的模版太丑啦，功能也不完全，我们可以到Hexo官网挑选自己喜欢的主题。</p>
<p>之后通过该主题的官方文档即可完成模版的配置。</p>
<p>个人比较喜欢的几个模版：Maupassant、NexT、Purer</p>
<h5 id="博文上传">博文上传</h5>
<p>将你的文章的.md文件放入Blog文件下的source/_posts即可。</p>
<h5 id="问题总结">问题总结</h5>
<p>1.从GitHub获取文件时出现unable to access</p>
<p>可使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export http_proxy=http://proxyAddress:port</span><br></pre></td></tr></table></figure>
<p>让Terminal使用代理，此命令只对当前Terminal生效，若想获取永久代理，可自行Google。</p>
<p>2.安装hero-renderer-sass失败，网络上的常见解决方案对我无效</p>
<p>目前暂未解决该问题，猜想是默认安装的Node.js版本与默认安装的sass版本不匹配。</p>
<p>3.本地网页预览正确，部署到网页上后显示有问题</p>
<p>通过修改站点配置文件_config,yml中的网页url解决。</p>
]]></content>
      <categories>
        <category>萌新之始</category>
      </categories>
      <tags>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>《常微分方程》学习笔记</title>
    <url>/2022/01/06/%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h4 id="变量分离法">变量分离法</h4>
<h5 id="变量分离方程fracdydx-fxgy">变量分离方程：<span class="math inline">\(\frac{dy}{dx} = f(x)g(y)\)</span></h5>
<p>当<span class="math inline">\(g(y) \neq 0\)</span>，<span class="math inline">\(\frac{dy}{g(y)} = f(x)dx\)</span>，解为<span class="math inline">\(\int\frac{1}{g(y)}dy = \int f(x)dx +c\)</span></p>
<p>若<span class="math inline">\(g(y_0) = 0\)</span>，则<span class="math inline">\(y = y_0\)</span>也是方程的解</p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(\frac{dy}{dx} = 2x(1-y^2)^{\frac{1}{2}}\)</span></p>
<span id="more"></span>
<h5 id="齐次方程fracdydx-gfracyx">齐次方程：<span class="math inline">\(\frac{dy}{dx} = g(\frac{y}{x})\)</span></h5>
<p>令<span class="math inline">\(u=\frac{y}{x}\)</span>，则<span class="math inline">\(x\frac{du}{dx}+u=g(u)\)</span>，从而<span class="math inline">\(\frac{du}{dx} = \frac{g(u)-u}{x}\)</span>即为变量分离方程</p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(x\frac{dy}{dx} = y+\sqrt{x^2-y^2}\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(\frac{dy}{dx} = \frac{2xye^{(\frac{x}{y})^2}}{y^2+y^2e^{(\frac{x}{y})^2}+2x^2e^{(\frac{x}{y})^2}}\)</span></p>
<h5 id="形如fracdydx-fraca_1xb_1yc_1a_2xb_2yc_2">形如<span class="math inline">\(\frac{dy}{dx} = \frac{a_1x+b_1y+c_1}{a_2x+b_2y+c_2}\)</span></h5>
<p>利用平移变换可化为齐次方程</p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(\frac{dy}{dx} = \frac{2x-y+1}{x-2y+1}\)</span></p>
<h4 id="一阶线性微分方程常数变易法">一阶线性微分方程常数变易法</h4>
<p><span class="math inline">\(y&#39; = P(x)y+Q(x)\)</span></p>
<p>当<span class="math inline">\(Q(x) = 0\)</span>时，可化为变量分离方程，解为<span class="math inline">\(y=Ce^{\int P(x)dx}\)</span></p>
<p>通过常数变易<span class="math inline">\(y(x) = C(x)e^{\int P(x)dx}\)</span>代入方程中，可解得<span class="math inline">\(C(x) = \int Q(x)e^{-\int P(x)dx}dx+k\)</span></p>
<p>因此原方程通解为<span class="math inline">\(y = e^{\int P(x)dx}(\int Q(x)e^{-P(x)dx}dx+k)\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(\frac{dy}{dx}-\frac{n}{x}y = e^xx^n\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(\frac{dy}{dx}=\frac{y}{x+y^3}\)</span></p>
<p><span class="math inline">\(Bernoulli\)</span>方程：<span class="math inline">\(\frac{dy}{dx} = P(x)y+Q(x)y^n\)</span></p>
<p>两边同乘<span class="math inline">\(y^{-n}\)</span>，可得<span class="math inline">\(y^{-n}\frac{dy}{dx} = P(x)y^{1-n}+Q(x)\)</span></p>
<p>令<span class="math inline">\(z = y^{1-n}\)</span>，则<span class="math inline">\(\frac{dz}{dx} = (1-n)P(x)z+(1-n)Q(x)\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(\frac{dy}{dx} = \frac{x^4+y^3}{xy^2}\)</span></p>
<p><span class="math inline">\(Riccati\)</span>方程：<span class="math inline">\(\frac{dy}{dx} = P(x)y+Q(x)y^2+f(x)\)</span></p>
<p>一般无法精确求解，但若已知一个特解<span class="math inline">\(y^*(x)\)</span>，做变换<span class="math inline">\(y = z+y^*(x)\)</span>，可将方程化为<span class="math inline">\(\frac{dz}{dx} = (P(x)+2Q(x)y^*(x))z+Q(x)z^2\)</span>，即为<span class="math inline">\(n=2\)</span>的<span class="math inline">\(Bernoulli\)</span>方程</p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(\frac{dy}{dx}+y^2-3ysinx=cosx-2sin^2x\)</span></p>
<h4 id="恰当方程与积分因子法">恰当方程与积分因子法</h4>
<p>恰当方程：<span class="math inline">\(M(x,y)dx+N(x,y)dy=0\)</span>满足<span class="math inline">\(M(x,y)dx+N(x,y)dy=du(x,y) = \frac{\partial u}{\partial x}dx+\frac{\partial u}{\partial y}dy\)</span></p>
<p>恰当方程的充要条件<span class="math inline">\(\frac{\partial M}{\partial y} = \frac{\partial N}{\partial x}\)</span></p>
<p>恰当方程的解：观察法或<span class="math inline">\(u(x,y) = \int M(x,y)dx+\int[N(x,y)-\frac{\partial}{\partial y}\int M(x,y)dx]dy\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\([\frac{y^2}{(x-y)^2}-\frac{1}{x^2}]dx+[\frac{1}{y}-\frac{x^2}{(x-y)^2}]dy=0\)</span></p>
<p>若存在连续可微函数<span class="math inline">\(\mu = \mu(x,y) \neq 0\)</span>，使得<span class="math inline">\(\mu M(x,y)dx+\mu N(x,y)dy=0\)</span>为恰当方程，则称<span class="math inline">\(\mu\)</span>为积分因子</p>
<p>积分因子的求法</p>
<p>（1）<span class="math inline">\(\frac{\frac{\partial M}{\partial y}-\frac{\partial N}{\partial x}}{N} = \psi(x)\)</span>或<span class="math inline">\(\frac{\frac{\partial M}{\partial y}-\frac{\partial N}{\partial x}}{-M} = \psi(y)\)</span></p>
<p>积分因子为<span class="math inline">\(\mu = e^{\int \psi(x)dx}\)</span>或<span class="math inline">\(\mu = e^{\psi(y)dy}\)</span></p>
<p>（2）<span class="math inline">\(\frac{\frac{\partial M}{\partial y}-\frac{\partial N}{\partial x}}{N\frac{\partial z}{\partial x}-M\frac{\partial z}{\partial y}} = f(z)\)</span></p>
<p>则<span class="math inline">\(\mu = e^{\int f(z)dz}\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(ydx+(y-x)dy=0\)</span></p>
<p>分组积分因子法</p>
<p>求出每组的积分因子<span class="math inline">\(\mu _1,\mu_2\)</span>与对应的恰当函数<span class="math inline">\(u_1,u_2\)</span>，寻找<span class="math inline">\(\phi, \psi\)</span>，使<span class="math inline">\(\mu = \mu_1\phi(u_1) = \mu_2 \psi(u_2)\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\((5xy-3y^3)dx+(3x^2-7xy^2)=0\)</span></p>
<h4 id="一阶隐式方程求法">一阶隐式方程求法</h4>
<p>（1）<span class="math inline">\(y = f(x,y&#39;)\)</span>或<span class="math inline">\(x = f(y, y&#39;)\)</span></p>
<p>令<span class="math inline">\(y&#39; = p\)</span>，有<span class="math inline">\(y = f(x,p)\)</span>，两边求导得<span class="math inline">\(p = \frac{\partial f}{\partial x} + \frac{dp}{dx}\frac{\partial f}{\partial p}\)</span></p>
<p>即<span class="math inline">\(\frac{dp}{dx} = \frac{p-\frac{\partial f}{\partial x}}{\frac{\partial f}{\partial p}}\)</span></p>
<p>从而解出<span class="math inline">\(p = \phi(x, C)\)</span>，代入即得<span class="math inline">\(y = f(x, \phi(x, C))\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(y = -(\frac{dy}{dx})^2-x\frac{dy}{dx}-\frac{x^2}{2}\)</span></p>
<p>（2）<span class="math inline">\(f(x,y&#39;)=0\)</span>或<span class="math inline">\(f(y,y&#39;)=0\)</span></p>
<p>设参数形式为<span class="math inline">\(x = \phi(t), \ p = \psi(t)\)</span>，则<span class="math inline">\(y = \int \psi(t)\phi&#39;(t)dt + C\)</span></p>
<p>即原方程通解为<span class="math inline">\(\left \{ \begin{array}{lr} x = \phi(t) \\ y = \int \psi(t)\phi&#39;(t)dt +C \end{array} \right.\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\((y&#39;)^3-x^3(1-y&#39;)=0\)</span></p>
<h4 id="n阶常系数齐线性微分方程解法">n阶常系数齐线性微分方程解法</h4>
<p><span class="math inline">\(y^{(n)}+a_1y^{(n-1)}+...+a_{n-1}y&#39;+a_ny = 0\)</span></p>
<p>令<span class="math inline">\(F(\lambda) = \lambda ^n + a_1 \lambda ^{n-1}+...+a_{n-1}\lambda + a_n = 0\)</span>，解出特征根</p>
<p>（1）特征根都为单根</p>
<p>设特征根为<span class="math inline">\(\lambda_1,...\lambda_n\)</span></p>
<p>则原方程通解为<span class="math inline">\(y = c_1e^{\lambda_1x}+c_2e^{\lambda_2x}+...+c_ne^{\lambda_nx}\)</span></p>
<p>若<span class="math inline">\(\lambda_i = \alpha_i + i \beta_i\)</span>为复根，则<span class="math inline">\(\lambda_i&#39; = \alpha_i-i\beta_i\)</span>也是特征根，故可用<span class="math inline">\(e^{\alpha_ix}cos\beta_ix,\ e^{\alpha_ix}sin\beta_ix\)</span>替代<span class="math inline">\(e^{\lambda_ix},e^{\lambda_i&#39;x}\)</span></p>
<p>（2）特征根有重根</p>
<p>设特征方程有<span class="math inline">\(k_i\)</span>重特征根<span class="math inline">\(\lambda_i\)</span>，则方程有<span class="math inline">\(k_i\)</span>个线性无关的解</p>
<p><span class="math inline">\(e^{\lambda_ix},xe^{\lambda_ix},...,x^{k_i-1}e^{\lambda_ix}\)</span></p>
<p>若<span class="math inline">\(\lambda_i = \alpha_i+i\beta_i\)</span>，则有解</p>
<p><span class="math inline">\(e^{\alpha_ix}cos\beta_ix,xe^{\alpha_ix}cos\beta_ix,...,x^{k_i-1}e^{\alpha_ix}cos\beta_ix\)</span></p>
<p><span class="math inline">\(e^{\alpha_ix}sin\beta_ix,xe^{\alpha_ix}sin\beta_ix,...,x^{k_i-1}e^{\alpha_ix}sin\beta_ix\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(y^{(7)}-3y^{(6)}+5y^{(5)}-7y^{(4)}+7y^{(3)}-5y^{(2)}+3y&#39;-y=0\)</span></p>
<p><span class="math inline">\(Euler\)</span>方程：<span class="math inline">\(x^n\frac{d^n y}{dx^n}+a_1x^{n-1}\frac{d^{n-1}y}{dx^{n-1}}+...+a_{n-1}x\frac{dy}{dx}+a_ny = 0\)</span></p>
<p>做换元<span class="math inline">\(x = e^t\)</span>，有<span class="math inline">\(x^k\frac{d^ky}{dx^k} = D(D-1)...(D-k+1)y\)</span>，<span class="math inline">\(D=\frac{d}{dt}\)</span></p>
<p>即可将<span class="math inline">\(Euler\)</span>方程变为常系数齐线性微分方程</p>
<p>即解<span class="math inline">\(F(\lambda) = \lambda(\lambda-1)...(\lambda-n+1)+a_1\lambda(\lambda-1)...(\lambda-n+2)+...+a_{n-1}\lambda+a_n = 0\)</span></p>
<p>对<span class="math inline">\(k_i\)</span>重根<span class="math inline">\(\lambda_i\)</span>，对应的解为</p>
<p><span class="math inline">\(x^{\lambda_i},(ln|x|)x^{\lambda_i},...,(ln|x|)^{k_i-1}x^{\lambda_i}\)</span></p>
<p>若<span class="math inline">\(\lambda_i=\alpha_i+i\beta_i\)</span>，对应有解</p>
<p><span class="math inline">\(x^{\alpha_i}cos(\beta_iln|x|),x^{\alpha_i}ln|x|cos(\beta_iln|x|),...,x^{\alpha_i}(ln|x|)^{k_i-1}cos(\beta_iln|x|)\)</span></p>
<p><span class="math inline">\(x^{\alpha_i}sin(\beta_iln|x|),x^{\alpha_i}ln|x|sin(\beta_iln|x|),...,x^{\alpha_i}(ln|x|)^{k_i-1}sin(\beta_iln|x|)\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(x^2\frac{d^2y}{dx^2}-3x\frac{dy}{dx}+4y=0\)</span></p>
<h4 id="n阶常系数非齐线性微分方程解法">n阶常系数非齐线性微分方程解法</h4>
<p>常系数非齐线性微分方程：<span class="math inline">\(y^{(n)}+a_1y^{(n-1)}+...+a_{n-1}y&#39;+a_ny = f(x)\)</span></p>
<h5 id="常数变易法">常数变易法</h5>
<p>对<span class="math inline">\(f(x) = 0\)</span>解出<span class="math inline">\(y(x) = C_1y_1(x)+...+C_ny_n(x)\)</span></p>
<p>将常数变易<span class="math inline">\(y(x) = C_1(x)y_1(x)+...+C_n(x)y_n(x)\)</span></p>
<p>对<span class="math inline">\(y(x)\)</span>两边求导得<span class="math inline">\(y&#39;(x) = C_1(x)y&#39;_1(x)+...+C_n(x)y&#39;_n(x)+C_1&#39;(x)y_1(x)+...+C_n&#39;(x)y_n(x)\)</span></p>
<p>令<span class="math inline">\(C_1&#39;(x)y_1(x)+...+C_n&#39;(x)y_n&#39;(x)=0\)</span></p>
<p>如此求<span class="math inline">\(n-1\)</span>次，得到<span class="math inline">\(n-1\)</span>个方程</p>
<p>最后关于<span class="math inline">\(x\)</span>求导可得<span class="math inline">\(C_1&#39;(x)y_1^{(n-1)}(x)+...+C&#39;_n(x)y_n^{(n-1)}(x) = f(x)\)</span></p>
<p>通过解下列线性方程组即可求得<span class="math inline">\(C_1(x),...C_n(x)\)</span></p>
<p><span class="math inline">\(\left\{\begin{array}{lr} C_1&#39;(x)y_1(x)+...+C_n&#39;(x)y_n(x) = 0 \\ C_1&#39;(x)y_1&#39;(x)+...+C_n&#39;(x)y_n&#39;(x) = 0 \\ ...... \\ C_1&#39;(x)y_1^{(n-2)}(x)+...+C_n&#39;(x)y_n^{(n-2)}(x) = 0 \\ C_1&#39;(x)y_1^{(n-1)}(x)+...+C_n&#39;(x)y_n^{(n-1)}(x) = f(x) \end{array} \right.\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(\frac{d^2y}{dx^2}+4y=xsin2x\)</span></p>
<h5 id="比较系数法">比较系数法</h5>
<p>若<span class="math inline">\(f(x) = (b_0x^m+b_1x^{m-1}+...+b_{m-1}x+b_m)e^{rx}\)</span>，则方程有形如：<span class="math inline">\(y=x^k(B_0x^m+B_1x^{m-1}+...+B_{m-1}x+B_m)e^{rx}\)</span>的特解，其中<span class="math inline">\(k\)</span>为特征方程<span class="math inline">\(F(\lambda)=0\)</span>的根<span class="math inline">\(\lambda=r\)</span>的重数，当<span class="math inline">\(r\)</span>不是特征根时，取<span class="math inline">\(k=0\)</span></p>
<p>若<span class="math inline">\(f(x) = [A_m(x)cos\beta x + B_n(x)sin\beta x]e^{\alpha x}\)</span>，其中<span class="math inline">\(\alpha,\beta\)</span>为实常数，<span class="math inline">\(A_m(x),B_n(x)\)</span>分别为<span class="math inline">\(x\)</span>的<span class="math inline">\(m,n\)</span>次实系数多项式，则方程有形如：</p>
<p><span class="math inline">\(y = x^k[C_s(x)cos\beta x+D_s(x)sin \beta x]e^{\alpha x}\)</span>的特解，其中<span class="math inline">\(k\)</span>为特征根<span class="math inline">\(\alpha+i\beta\)</span>的重数，当$+i<span class="math inline">\(不是特征根时，取\)</span>k=0<span class="math inline">\(，\)</span>C_s(x),D_s(x)<span class="math inline">\(为\)</span>s<span class="math inline">\(次待定实系数多项式，\)</span>s = max { m,n }$</p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(y^{(4)}-2y&#39;&#39;+y=x^2-3\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(y&#39;&#39;&#39;-y=(x+1)e^x\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(y&#39;&#39;-2y&#39;+2y=xe^xcosx\)</span></p>
<h5 id="复数法">复数法</h5>
<p>若<span class="math inline">\(f(x) = A(x)e^{\alpha x}cos\beta x\)</span>或<span class="math inline">\(f(x) = A(x)e^{\alpha x}sin \beta x\)</span></p>
<p>则原方程的特解为方程<span class="math inline">\(y^{(n)}+a_1y^{(n-1)}+...+a_{n-1}y&#39;+a_ny = f(x)\)</span>特解的实部或虚部</p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(y&#39;&#39;+9y=xsin3x\)</span></p>
<h5 id="叠加原理法">叠加原理法</h5>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(y&#39;&#39;+y=sinx-cos2x\)</span></p>
<h4 id="laplace变换法求解n阶线性微分方程的初值问题"><span class="math inline">\(Laplace\)</span>变换法求解n阶线性微分方程的初值问题</h4>
<p>在有定义的条件下，<span class="math inline">\(F(s) = \int _0 ^{+\infty} e^{-sx}f(x)dx\)</span>为<span class="math inline">\(f(x)\)</span>的<span class="math inline">\(Laplace\)</span>变换，记为<span class="math inline">\(L[f(x)] = F(s)\)</span></p>
<p><span class="math inline">\(Laplace\)</span>变换的性质：</p>
<p>（1）线性性质：<span class="math inline">\(L[\alpha f(x) + \beta g(x)] = \alpha L[f(x)]+\beta L[g(x)]\)</span></p>
<p>（2）原函数微分性质：记<span class="math inline">\(L[f(x)] = F(s)\)</span>，则<span class="math inline">\(L[f&#39;(x)] = sF(s)-f(0)\)</span></p>
<p>一般地，<span class="math inline">\(L[f^{(n)}(x)] = s^nF(s)-s^{n-1}f(0)-s^{n-2}f&#39;(0)-...-f^{(n-1)}(0)\)</span></p>
<p>（3）像函数微分性质：<span class="math inline">\(F&#39;(s) = -L[xf(x)]\)</span></p>
<p>一般地，<span class="math inline">\(F^{(n)}(s) = (-1)^n L[x^nf(x)]\)</span></p>
<p>（4）位移性质：<span class="math inline">\(L[e^{ax}f(x)] = F(s-a)\)</span></p>
<p>（5）卷积性质</p>
<p>常见函数的<span class="math inline">\(Laplace\)</span>变换</p>
<p><span class="math inline">\(L[1] = \frac{1}{s}\)</span></p>
<p><span class="math inline">\(L[x^n] = \frac{n!}{s^{n+1}}\)</span></p>
<p><span class="math inline">\(L[x^ne^{ax}] = \frac{n!}{(s-a)^{n+1}}\)</span></p>
<p><span class="math inline">\(L[e^{ax}] = \frac{1}{s-a}\)</span></p>
<p><span class="math inline">\(L[sinkx] = \frac{k}{s^2+k^2}\)</span></p>
<p><span class="math inline">\(L[coskx] =\frac{s}{s^2+k^2}\)</span></p>
<p><span class="math inline">\(L[xsinkx] = \frac{2sk}{(s^2+k^2)^2}\)</span></p>
<p><span class="math inline">\(L[xcoskx] = \frac{s^2-k^2}{(s^2+k^2)^2}\)</span></p>
<p>应用<span class="math inline">\(Laplace\)</span>变换解方程的解法</p>
<p>记<span class="math inline">\(L[y(x)] = Y(s)\)</span>，在微分方程两边取<span class="math inline">\(Laplace\)</span>变换，代入初值条件，整理得到<span class="math inline">\(Y(s)\)</span>的表达式，将<span class="math inline">\(Y(s)\)</span>变形为容易得到<span class="math inline">\(Laplace\)</span>逆变换的形式，再做<span class="math inline">\(Laplace\)</span>逆变换，即可解得<span class="math inline">\(y(x)\)</span></p>
<p><span class="math inline">\(Ex.\)</span> 方程<span class="math inline">\(y&#39;&#39;+2y&#39;-3y=e^{-x}\)</span>，满足初始条件<span class="math inline">\(y(0) = 0,y&#39;(0) = 1\)</span>，求<span class="math inline">\(y(x)\)</span></p>
<h4 id="高阶微分方程降阶法">高阶微分方程降阶法</h4>
<h5 id="换元">换元</h5>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(\frac{d^5y}{dx^5}-\frac{1}{x}\frac{d^4y}{dx^4} = 0\)</span></p>
<h5 id="凑微分">凑微分</h5>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(yy&#39;&#39;-(y&#39;)^2=0\)</span></p>
<h5 id="齐次方程换元法">齐次方程换元法</h5>
<p>若<span class="math inline">\(F(x,y,y&#39;,...,y^{(n)})\)</span>关于<span class="math inline">\(y\)</span>与<span class="math inline">\(y\)</span>的各阶导数是齐次的，则可做换元<span class="math inline">\(y=e^{\int zdx}\)</span>，代入解出<span class="math inline">\(z\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(yy&#39;&#39;-(y&#39;)^2=0\)</span></p>
<h5 id="通过已知解降阶">通过已知解降阶</h5>
<p>已知<span class="math inline">\(y_0\)</span>为方程的解，通过换元<span class="math inline">\(y = y_0u\)</span>，代入方程即可实现降阶</p>
<p>特别地，设<span class="math inline">\(y_1(x) \neq 0\)</span>是二阶变系数微分方程<span class="math inline">\(y&#39;&#39;+a_1y&#39;+a_2y=0\)</span>的解，则方程另一与<span class="math inline">\(y_1\)</span>线性无关的解为<span class="math inline">\(y_1 \int \frac{1}{y_1^2}e^{-\int a_1(x)dx}dx\)</span>，即方程的通解为<span class="math inline">\(y=C_1y_1+C_2y_1 \int \frac{1}{y_1^2}e^{-a_1(x)dx}dx\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(x\frac{d^3y}{dx^3}+3\frac{d^2y}{dx^2}-x\frac{dy}{dx}-y=0\)</span>有特解<span class="math inline">\(y_0=\frac{1}{x}\)</span>，求其通解</p>
<h5 id="幂级数解法">幂级数解法</h5>
<h4 id="常系数齐线性微分方程组解法">常系数齐线性微分方程组解法</h4>
<p><span class="math inline">\(\frac{d \boldsymbol{x}}{dt} = A\boldsymbol{x}\)</span>，<span class="math inline">\(A=(a_{ij})_{(n \times n)}\)</span>为常数矩阵</p>
<h5 id="特征向量法">特征向量法</h5>
<p>如果矩阵<span class="math inline">\(A\)</span>有<span class="math inline">\(n\)</span>个线性无关的特征向量<span class="math inline">\(\boldsymbol{u}_1,\boldsymbol{u}_2,...,\boldsymbol{u}_n\)</span>，对应的特征值为<span class="math inline">\(\lambda_1,\lambda_2,...\lambda_n\)</span>（不必互不相同），则有基解矩阵<span class="math inline">\(\boldsymbol{\Phi}(t) = [e^{\lambda_1t}\boldsymbol{u}_1,e^{\lambda_2t}\boldsymbol{u}_2,...,e^{\lambda_nt}\boldsymbol{u}_n]\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(\frac{d\boldsymbol{x}}{dt} = \left( \begin{array}{**} 3 &amp; -1 &amp; 1 \\ -1&amp; 5&amp; -1\\1 &amp; -1 &amp; 3 \end{array} \right)\boldsymbol{x}\)</span></p>
<p><span class="math inline">\(Ex.\)</span> <span class="math inline">\(\frac{d\boldsymbol{x}}{dt} = \left( \begin{array}{**} 1 &amp; 1 \\ -1&amp; 1 \end{array} \right)\boldsymbol{x}\)</span></p>
<h5 id="jordan标准形法"><span class="math inline">\(Jordan\)</span>标准形法</h5>
<h5 id="hamilton-cayley法"><span class="math inline">\(Hamilton-Cayley\)</span>法</h5>
<p>设<span class="math inline">\(\lambda_1,...\lambda_n\)</span>为<span class="math inline">\(A\)</span>的特征值（可以有相同的），令</p>
<p><span class="math inline">\(\left \{ \begin{array}{lr} Q_0 = E \\ Q_1 = (A-\lambda_1E)Q_0 \\ ...... \\ Q_{n-1} = (A-\lambda_{n-1}E)Q_{n-2} \end{array} \right.\)</span></p>
<p>令</p>
<p><span class="math inline">\(\left \{ \begin{array}{lr} r_1(t) = e^{\lambda_1t} \\ r_2(t) = \int _0 ^t e^{\lambda_2(t-s)}r_1(s)ds \\ ...... \\ r_n(t) = \int_0^t e^{\lambda_n(t-s)}r_{n-1}(s)ds \end{array} \right.\)</span></p>
<p>则方程的基解矩阵为<span class="math inline">\(e^{At} = r_1(t)Q_0 + r_2(t)Q_1 +...+r_n(t)Q_{n-1}\)</span></p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>数学</tag>
      </tags>
  </entry>
</search>
